<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="tnt_archivos/filelist.xml">
<title>T</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Ramón Albarracín</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Usuario</o:LastAuthor>
  <o:Revision>127</o:Revision>
  <o:TotalTime>1387</o:TotalTime>
  <o:Created>2003-10-01T18:42:00Z</o:Created>
  <o:LastSaved>2023-03-12T22:05:00Z</o:LastSaved>
  <o:Pages>40</o:Pages>
  <o:Words>15137</o:Words>
  <o:Characters>86286</o:Characters>
  <o:Company>EXE</o:Company>
  <o:Lines>719</o:Lines>
  <o:Paragraphs>202</o:Paragraphs>
  <o:CharactersWithSpaces>101221</o:CharactersWithSpaces>
  <o:Version>15.00</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<link rel=themeData href="tnt_archivos/themedata.thmx">
<link rel=colorSchemeMapping href="tnt_archivos/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:View>Print</w:View>
  <w:Zoom>120</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:HyphenationZone>21</w:HyphenationZone>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
   <w:BreakWrappedTables/>
   <w:SplitPgBreakAndParaMark/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="371">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:1;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:variable;
	mso-font-signature:0 0 0 0 0 0;}
@font-face
	{font-family:"Arial Black";
	panose-1:2 11 10 4 2 1 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:"Century Gothic";
	panose-1:2 11 5 2 2 2 2 2 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:auto;
	mso-font-signature:0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Título 1 Car";
	mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-font-kerning:0pt;
	mso-ansi-language:EN-GB;}
h2
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Título 2 Car";
	mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	text-indent:70.9pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-ansi-language:EN-GB;
	font-weight:normal;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Título 3 Car";
	mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	text-indent:35.4pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:normal;}
h4
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Título 4 Car";
	mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Arial","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-ansi-language:EN-GB;
	font-weight:normal;}
h5
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Título 5 Car";
	mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:5;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Arial","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-font-weight:normal;}
h6
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Título 6 Car";
	mso-style-next:Normal;
	margin:0cm;
	margin-bottom:.0001pt;
	text-indent:35.45pt;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:6;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-ansi-language:EN-GB;
	font-weight:normal;}
span.MsoEndnoteReference
	{mso-style-noshow:yes;
	mso-style-priority:99;
	vertical-align:super;}
p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Texto nota al final Car";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Puesto Car";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Century Gothic","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";
	font-weight:bold;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Texto independiente Car";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-GB;}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Sangría de texto normal Car";
	margin:0cm;
	margin-bottom:.0001pt;
	text-indent:35.4pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-GB;
	font-weight:bold;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Texto independiente 2 Car";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-ansi-language:EN-GB;}
p.MsoBodyTextIndent2, li.MsoBodyTextIndent2, div.MsoBodyTextIndent2
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Sangría 2 de t\. independiente Car";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:106.2pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";}
p.MsoBodyTextIndent3, li.MsoBodyTextIndent3, div.MsoBodyTextIndent3
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Sangría 3 de t\. independiente Car";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:35.45pt;
	margin-bottom:.0001pt;
	text-indent:-35.45pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-GB;}
p.MsoBlockText, li.MsoBlockText, div.MsoBlockText
	{mso-style-noshow:yes;
	mso-style-priority:99;
	margin-top:0cm;
	margin-right:42.55pt;
	margin-bottom:0cm;
	margin-left:70.9pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-noshow:yes;
	mso-style-priority:99;
	color:purple;
	text-decoration:underline;
	text-underline:single;}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Texto sin formato Car";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
span.Ttulo1Car
	{mso-style-name:"Título 1 Car";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Título 1";
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Ttulo2Car
	{mso-style-name:"Título 2 Car";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Título 2";
	mso-ansi-font-size:13.0pt;
	mso-bidi-font-size:13.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Ttulo3Car
	{mso-style-name:"Título 3 Car";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Título 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#1F4D78;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.Ttulo4Car
	{mso-style-name:"Título 4 Car";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Título 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.Ttulo5Car
	{mso-style-name:"Título 5 Car";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Título 5";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#2E74B5;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Ttulo6Car
	{mso-style-name:"Título 6 Car";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Título 6";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#1F4D78;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.TextonotaalfinalCar
	{mso-style-name:"Texto nota al final Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Texto nota al final";}
span.PuestoCar
	{mso-style-name:"Puesto Car";
	mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Puesto;
	mso-ansi-font-size:28.0pt;
	mso-bidi-font-size:28.0pt;
	font-family:"Calibri Light","sans-serif";
	mso-ascii-font-family:"Calibri Light";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Calibri Light";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
span.TextoindependienteCar
	{mso-style-name:"Texto independiente Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Texto independiente";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.SangradetextonormalCar
	{mso-style-name:"Sangría de texto normal Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Sangría de texto normal";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.Textoindependiente2Car
	{mso-style-name:"Texto independiente 2 Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Texto independiente 2";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.Sangra2detindependienteCar
	{mso-style-name:"Sangría 2 de t\. independiente Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Sangría 2 de t\. independiente";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;}
span.Sangra3detindependienteCar
	{mso-style-name:"Sangría 3 de t\. independiente Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Sangría 3 de t\. independiente";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;}
span.TextosinformatoCar
	{mso-style-name:"Texto sin formato Car";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Texto sin formato";
	mso-ansi-font-size:10.5pt;
	mso-bidi-font-size:10.5pt;
	font-family:"Consolas","serif";
	mso-ascii-font-family:Consolas;
	mso-hansi-font-family:Consolas;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.8pt 70.85pt 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.8pt 70.85pt 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-columns:2 even 35.45pt;
	mso-paper-source:0;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.8pt 70.85pt 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.WordSection3
	{page:WordSection3;}
 /* List Definitions */
 @list l0
	{mso-list-id:272589138;
	mso-list-type:hybrid;
	mso-list-template-ids:766288858 201981953 201981955 201981957 201981953 201981955 201981957 201981953 201981955 201981957;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@list l0:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:441806039;
	mso-list-type:simple;
	mso-list-template-ids:-1712702714;}
@list l1:level1
	{mso-level-start-at:12;
	mso-level-text:%1;
	mso-level-tab-stop:78.9pt;
	mso-level-number-position:left;
	margin-left:78.9pt;
	text-indent:-21.0pt;}
@list l2
	{mso-list-id:1225606814;
	mso-list-type:hybrid;
	mso-list-template-ids:-1737598732 201981953 201981955 201981957 201981953 201981955 201981957 201981953 201981955 201981957;}
@list l2:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@list l2:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l2:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l3
	{mso-list-id:1562444936;
	mso-list-type:simple;
	mso-list-template-ids:-99559564;}
@list l3:level1
	{mso-level-start-at:0;
	mso-level-text:%1;
	mso-level-tab-stop:81.75pt;
	mso-level-number-position:left;
	margin-left:81.75pt;
	text-indent:-18.0pt;}
@list l4
	{mso-list-id:1949728228;
	mso-list-type:hybrid;
	mso-list-template-ids:-154522648 201981953 201981955 201981957 201981953 201981955 201981957 201981953 201981955 201981957;}
@list l4:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@list l4:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l4:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Tabla normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=aqua lang=EN-US link=blue vlink=purple style='tab-interval:35.4pt'>

<div class=WordSection1>

<p class=MsoTitle style='margin-top:0cm;margin-right:-21.35pt;margin-bottom:
0cm;margin-left:-14.2pt;margin-bottom:.0001pt'><span lang=EN-GB
style='font-size:28.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial Black","sans-serif";
color:black;mso-ansi-language:EN-GB'>T. N. T.<o:p></o:p></span></p>

<p class=MsoTitle style='margin-top:0cm;margin-right:-21.35pt;margin-bottom:
0cm;margin-left:-14.2pt;margin-bottom:.0001pt'><span lang=EN-GB
style='font-size:20.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial Black","sans-serif";
color:black;mso-ansi-language:EN-GB'>Tree Analysis Using New Technology<o:p></o:p></span></p>

<p class=MsoTitle style='margin-top:0cm;margin-right:-21.35pt;margin-bottom:
0cm;margin-left:-14.2pt;margin-bottom:.0001pt'><span lang=EN-GB
style='font-size:16.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial Black","sans-serif";
color:black;mso-ansi-language:EN-GB'>Version 1.1 </span><span lang=EN-GB
style='font-size:18.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;
mso-ascii-font-family:"Arial Black";mso-hansi-font-family:"Arial Black";
color:black;mso-ansi-language:EN-GB;mso-char-type:symbol;mso-symbol-font-family:
Symbol'><span style='mso-char-type:symbol;mso-symbol-font-family:Symbol'>ã</span></span><span
lang=EN-GB style='font-size:16.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial Black","sans-serif";
color:black;mso-ansi-language:EN-GB'> P. Goloboff, J. S. Farris, and K. Nixon<o:p></o:p></span></p>

<p class=MsoTitle style='margin-top:0cm;margin-right:-21.35pt;margin-bottom:
0cm;margin-left:-14.2pt;margin-bottom:.0001pt'><span lang=EN-GB
style='font-family:"Arial Black","sans-serif";mso-ansi-language:EN-GB'><a
href="#License_Agreement"><span style='color:windowtext'>License Agreement</span></a><o:p></o:p></span></p>

<p class=MsoTitle><span lang=EN-GB style='font-size:16.0pt;mso-bidi-font-size:
12.0pt;font-family:"Arial Black","sans-serif";color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><a name="_Index"></a><span
lang=EN-GB style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Introduction;_Getting_Started"><span
style='color:windowtext'>Introduction-Getting Started</span></a><span
style='mso-spacerun:yes'>      </span><a href="#_Saving_suboptimal_trees"><span
class=GramE><span style='color:windowtext'>Saving</span></span><span
style='color:windowtext'> suboptimal trees</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_What_TNT_doesn't"><span
style='color:windowtext'>What TNT doesn't do...</span></a><span
style='mso-spacerun:yes'>            </span><a href="#_Memory_Management"><span
style='color:windowtext'>Memory <span class=GramE>Management</span></span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Output_and_trees,"><span
style='color:windowtext'>Printing &amp; Metafiles</span></a><span
style='mso-spacerun:yes'>              </span><a href="#_Tree_Collapsing"><span
style='color:windowtext'>Tree Collapsing</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Data_Input"><span
style='color:windowtext'>Data Input</span></a><span
style='mso-spacerun:yes'>                        </span><a href="#_Command-Line"><span
style='color:windowtext'>Command-Line</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Continuous_characters_(back"><span
style='color:windowtext'>Continuous characters</span></a><span
style='mso-spacerun:yes'>             </span><a href="#_Batch_Menus"><span
style='color:windowtext'>Batch Menus</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Merging_Data_Files"><span
style='color:windowtext'>Merging Data Files</span></a><span
style='mso-spacerun:yes'>                </span><a
href="#_Measures_of_character"><span style='color:windowtext'>Measures of
support</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Basic_Character_Settings"><span
style='color:windowtext'>Basic Character Settings</span></a><span
style='mso-spacerun:yes'>          </span><a href="#_A_note_on"><span
style='color:windowtext'>Linux versions</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Scopes,_sets,_and"><span
style='color:windowtext'>Scopes, sets, and blocks</span></a><span
style='mso-spacerun:yes'>          </span><a href="#_Consensus_estimation_(back"><span
style='color:windowtext'>Consensus estimation</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Character_and_block"><span
style='color:windowtext'>Character and block names</span></a><span
style='mso-spacerun:yes'>         </span><a
href="#_Tree-searching_algorithms:_Implementat"><span style='color:windowtext'>Search
algorithms</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Step-Matrices"><span
style='color:windowtext'>Step-Matrices</span></a><span
style='mso-spacerun:yes'>                     </span><a
href="#_Determining_best_search"><span style='color:windowtext'>Setting search
parameters</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Ancestral_states_(for"><span
style='color:windowtext'>Ancestral states</span></a><span
style='mso-spacerun:yes'>                  </span><a
href="#_Implementation_notes_"><span style='color:windowtext'>Implementation
notes</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Nexus_files_(back"><span
style='color:windowtext'>Nexus files</span></a><span
style='mso-spacerun:yes'>    </span><span
style='mso-spacerun:yes'>                   </span><a
href="#_Scripting_(for_programmers"><span class=GramE><span style='color:windowtext'>Scripting(</span></span><span
style='color:windowtext'>advanced users)</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-family:"Courier New";mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><a href="#_Implied_Weighting__1"><span
style='color:windowtext'>Implied Weighting</span></a><span
style='mso-spacerun:yes'>                 </span><a href="#_Citations"><span
style='color:windowtext'>Citations</span></a><o:p></o:p></span></p>

<p class=MsoNormal style='margin-right:-28.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-fareast-font-family:"Times New Roman";color:black'><span
style='mso-tab-count:1'>    </span></span><span lang=EN-GB style='font-size:
14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
color:black'><span style='mso-tab-count:2'>                   </span><o:p></o:p></span></h1>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman";color:black'>Overview</span><span
lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:
"Times New Roman";color:black'> <o:p></o:p></span></h1>

<p class=MsoNormal style='margin-top:0cm;margin-right:-28.4pt;margin-bottom:
0cm;margin-left:7.1pt;margin-bottom:.0001pt'><span lang=EN-GB style='font-size:
11.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

</div>

<span lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;font-family:
"Times New Roman","serif";mso-fareast-font-family:"Times New Roman";mso-ansi-language:
EN-GB;mso-fareast-language:ES;mso-bidi-language:AR-SA'><br clear=all
style='page-break-before:auto;mso-break-type:section-break'>
</span>

<div class=WordSection2>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>General:
<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l4 level1 lfo1;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Windows versions with
     GUI; all versions can be interactively driven with commands <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l4 level1 lfo1;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>a simple but powerful
     scripting language allows customization and &quot;programming&quot; of
     complex routines or simulations<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l4 level1 lfo1;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Linux/Mac versions can
     run in parallel <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l4 level1 lfo1;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Reads Nona/<span
     class=SpellE>Hennig</span> input data, as well as basic Nexus files. <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l4 level1 lfo1;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Can export data and
     results easily to Nexus format<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l4 level1 lfo1;
     tab-stops:list 36.0pt'><span class=GramE><span lang=EN-GB
     style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>can</span></span><span
     lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
     EN-GB'> <span class=SpellE>overimpose</span> legends on tree-branches
     (e.g. different support measures).<o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Optimality
criteria: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l2 level1 lfo2;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>analyses under
     pre-defined weights <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l2 level1 lfo2;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>analyses under
     implied-weights, either with standard or user-defined weighting functions
     (the latter including definition of clique-like weighting)<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l2 level1 lfo2;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>analyses under
     self-weighted optimization (i.e. dynamic weighting of character-state
     transformations)<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l2 level1 lfo2;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>standard (Fitch,
     Farris) characters, easily definable branched characters (=character-state
     trees), Sankoff (=step-matrix characters), continuous characters (from 0
     to 65, with up to three decimals) <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l2 level1 lfo2;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>searches optionally
     collapse zero-length branches under different criteria (including SPR-TBR
     collapsing), or retain all distinct <span class=SpellE>dichotmous</span>
     trees <o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Search
options: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l2 level1 lfo2;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>exact
     (&quot;branch-and-bound&quot;) searches applicable to relatively small
     data sets<o:p></o:p></span></li>
</ul>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span class=GramE><span lang=EN-GB
     style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>random</span></span><span
     lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
     EN-GB'> addition sequences plus TBR, applicable to medium sized data sets.<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>the fastest SPR-TBR
     swapping algorithms of any program <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>variety of search
     methods for large/complex data sets (sectorial searches, ratcheting and
     tree-drifting, tree-fusing and tree-hybridization) <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>recursive sectorial
     searches, using user-defined commands to <span class=SpellE>analyze</span>
     sectors<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>searches highly
     customizable <i style='mso-bidi-font-style:normal'>via </i>simple scripts<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>positive and negative
     constraints, flexibly defined <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>time-bound searches<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span class=GramE><span lang=EN-GB
     style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>can</span></span><span
     lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
     EN-GB'> search for suboptimal trees (based on either fit difference and/or
     relative fit difference). <o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='margin-left:18.0pt;line-height:11.0pt'><span
lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Tree
diagnosis: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>parsimonious mapping of
     character states<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>lists of synapomorphies<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>can summarize mappings
     or lists of synapomorphies based on sets of trees rather than one tree at
     a time<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>can display all most
     parsimonious reconstructions<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>counts of specific
     types of transformations<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>through the scripting
     language, it allows finding best state assignments with a fixed state at
     one or more nodes (for a given tree)<o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Tree
comparisons: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>strict, combinable
     components, majority, and frequency difference consensus trees<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Semi-strict consensus
     supertrees, easy creation of MRP matrices (for subsequent supertree
     analysis under either parsimony or cliques) <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>finds taxa to prune to
     improve strict and combinable consensus trees<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span class=GramE><span lang=EN-GB
     style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>tree-distances</span></span><span
     lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
     EN-GB'>: distortion coefficient, SPR-distances, agreement subtrees.<span
     style='mso-spacerun:yes'>  </span>Others can be easily calculated in
     conjunction with scripting language (e.g. number of &quot;<span
     class=SpellE>flippings</span>&quot;, distance under MRP, triplets). <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>algorithms that help
     find taxa to prune to improve majority rule or frequency difference
     consensus trees, and group supports<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>easy comparisons of
     most similar groups between trees<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>comparisons of groups
     present in one tree but absent in another<o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='margin-left:18.0pt;line-height:11.0pt'><span
lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Group
supports, randomization: <o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>generation of random
     trees (for testing in combination with scripts)<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>data permutation (<span
     class=SpellE>alla</span> PTP) <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>generation of random or
     simulated (jukes-cantor only) data sets<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>highly customizable <span
     class=SpellE>jacknifing</span>, bootstrapping, or symmetric resampling
     (searches can use any command defined by the user, or access scripts for <span
     class=SpellE>analyzing</span> resampled data sets in a special way) <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Absolute and relative
     Bremer supports implemented natively (or easily with scripts) <o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>Scripting<o:p></o:p></span></p>

<p class=MsoNormal style='line-height:11.0pt'><span lang=EN-GB
style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>decision-making and
     control of loops <o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>definition of variables
     (arrays with up to 5 dimensions)<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span class=GramE><span lang=EN-GB
     style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>easy</span></span><span
     lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
     EN-GB'> access to internal variables to be used in decision making (number
     of taxa, trees, tree-scores, degree of resolution, branch lengths,
     tree-distances, etc.)<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>In Windows version,
     customizable dialogs<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>formatted output<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>easy access to taxon
     names, character names, branch-legends, etc., for use in formatted output<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span class=GramE><span lang=EN-GB
     style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>controls</span></span><span
     lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
     EN-GB'> runs in parallel (Linux/Mac only), launching, monitoring, and
     controlling slave tasks.<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>tree-manipulations
     (including easy definition of branch-swapping routines)<o:p></o:p></span></li>
 <li class=MsoNormal style='line-height:11.0pt;mso-list:l0 level1 lfo3;
     tab-stops:list 36.0pt'><span lang=EN-GB style='font-size:11.0pt;
     mso-bidi-font-size:12.0pt;mso-ansi-language:EN-GB'>allows manipulation of
     character-state reconstructions<o:p></o:p></span></li>
</ul>

<p class=MsoNormal style='margin-top:0cm;margin-right:-28.4pt;margin-bottom:
0cm;margin-left:7.1pt;margin-bottom:.0001pt'><span lang=EN-GB style='font-size:
11.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:-28.4pt;margin-bottom:
0cm;margin-left:7.1pt;margin-bottom:.0001pt'><span lang=EN-GB style='font-size:
11.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

</div>

<span lang=EN-GB style='font-size:11.0pt;mso-bidi-font-size:12.0pt;font-family:
"Times New Roman","serif";mso-fareast-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB;mso-fareast-language:ES;mso-bidi-language:AR-SA'><br
clear=all style='page-break-before:auto;mso-break-type:section-break'>
</span>

<div class=WordSection3>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Getting_Started"></a><a name="_Introduction;_Getting_Started"></a><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'>Introduction - Getting <span class=GramE>Started<span
style='font-family:"Times New Roman","serif"'><span style='mso-spacerun:yes'> 
</span></span><span style='font-size:12.0pt;font-family:"Times New Roman","serif"'>(</span></span></span><a
name="_top"></a><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black'><a href="#_Index"><span style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>TNT is a program for phylogenetic analysis under parsimony.<span
style='mso-spacerun:yes'>  </span>It provides fast tree-searching algorithms, as
well as extensive capabilities for tree diagnosis, consensus, and
manipulation.<span style='mso-spacerun:yes'>  </span>This documentation
explains some important things that are not immediately apparent (or cannot be
done easily) from the menus themselves. For details on how to use commands,
users must refer to the on-line help of TNT (accessed typing <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>help
&lt;enter&gt;</i></b> at the command prompt or the command dialog opened with <u>File</u>/<span
class=SpellE><u>CommandLine</u></span>).<span style='mso-spacerun:yes'> 
</span>This file, <b>tnt.htm</b>, provides a general description of the
program; if the file is copied to your Windows directory, then when selecting
the <u>Help</u> menu option, the Explorer is called to read this file.<span
style='mso-spacerun:yes'>  </span>Throughout this help file, commands that can
be typed at the command line (or included in a file), are marked with <b><i>italics
and bold</i></b>; menu options are <u>underlined</u>. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The basic thing you need to do to run TNT is to prepare a data input
file.<span style='mso-spacerun:yes'>  </span>You can either create this from
the program itself, with the <u>File/New</u> and <u>Data/Edit</u> menu options
(Windows only), or in a text editor.<span style='mso-spacerun:yes'> 
</span>This file should contain the data matrix (format specified in the next
section</span><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
mso-ansi-language:EN-GB'>, </span><span class=MsoHyperlink><span lang=ES
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:windowtext;mso-ansi-language:
ES'><a href="#_Data_Input_"><span lang=EN-GB style='color:windowtext;
mso-ansi-language:EN-GB'>Data Input</span></a></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>); it may contain also specifications of character names and settings,
like weights and <span class=SpellE>additivities</span> (this can be later
specified once within the program, but it is advisable to have this in the
file, so you do not forget to change something you need to change; see under</span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-GB'> </span><span class=MsoHyperlink><span lang=ES style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:windowtext;mso-ansi-language:ES'><a
href="#_Basic_Character_Settings"><span lang=EN-GB style='color:windowtext;
mso-ansi-language:EN-GB'>Basic Character Settings</span></a></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-GB'>, </span><span class=MsoHyperlink><span lang=ES style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:windowtext;mso-ansi-language:ES'><a
href="#_Step-Matrices_(back_to"><span lang=EN-GB style='color:windowtext;
mso-ansi-language:EN-GB'>Step-Matrices</span></a></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-GB'>, </span><span class=MsoHyperlink><span lang=ES style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:windowtext;mso-ansi-language:ES'><a
href="#_Ancestral_states_(for"><span lang=EN-GB style='color:windowtext;
mso-ansi-language:EN-GB'>Ancestral states</span></a></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>, and </span><span class=MsoHyperlink><span lang=ES
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:windowtext;mso-ansi-language:
ES'><a href="#_Character_and_block"><span lang=EN-GB style='color:windowtext;
mso-ansi-language:EN-GB'>Character and block names</span></a></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>).<span style='mso-spacerun:yes'>   </span>Check the
files <span class=SpellE><b style='mso-bidi-font-weight:normal'>zilla.tnt</b></span>,
<span class=SpellE><b style='mso-bidi-font-weight:normal'>example.tnt</b></span>,
and <span class=SpellE><b>contin.tnt</b></span>, three example data files
provided with the program.<span style='mso-spacerun:yes'>  </span>Note that all
the input files must be text-only files. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Once you have read the data in, you are ready to start doing searches,
etc. Like most parsimony programs (i.e. Hennig86, <span class=SpellE>Paup</span>,
or Pee-Wee/NONA), TNT has an internal (memory) buffer for trees, and many of
the commands and options (optimization, <span class=SpellE>consensing</span>,
etc.) are available only when there are trees in memory, as these commands are
performed on pre-existing trees.<span style='mso-spacerun:yes'>  </span>Some
search algorithms create trees <i>de novo </i>(others work on <span
class=SpellE>preexisting</span> trees, modifying them to try to find better
trees; see under </span><span class=MsoHyperlink><span lang=ES
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
ES'><a href="#_Tree-searching_algorithms_"><span lang=EN-GB style='color:black;
mso-ansi-language:EN-GB'>Tree-searching algorithms</span></a></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>). The trees in the memory buffer can be saved to
disk, so they are not lost when you exit the program; you can subsequently read
the trees into the program.<span style='mso-spacerun:yes'>  </span>The text
output produced by the program (i.e. results and timings of runs,
tree-diagrams, etc.) is written onto an internal text buffer, which can be
later saved to disk.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>If you have a Windows version, make sure you install the font provided
with the program, <b style='mso-bidi-font-weight:normal'>tred.ttf</b>, in your
system.<span style='mso-spacerun:yes'>  </span>This font is required for TNT to
draw trees properly.<span style='mso-spacerun:yes'>  </span>If the <span
class=SpellE><b style='mso-bidi-font-weight:normal'>tred</b></span> font is not
installed, TNT will attempt to use the font <b style='mso-bidi-font-weight:
normal'>terminal</b> (which also draws trees, if not as nice as <span
class=SpellE><b>tred</b>'s</span>). <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_What_TNT_doesn't"></a><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'>What TNT
doesn't do ...or does poorly... or doesn't do yet...</span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";
color:black'><span style='mso-spacerun:yes'>  </span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'>(<a href="#_Index"><span
class=GramE><span style='color:black'>back</span></span><span style='color:
black'> to index</span></a>)</span><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>There are many things the program does not do.<span
style='mso-spacerun:yes'>  </span>First, the program is conceived as a tool for
standard parsimony analysis.<span style='mso-spacerun:yes'>  </span>It does not
do maximum likelihood, it does not use specific models of evolution, <span
class=GramE>it</span> does not do <span class=SpellE>bayesian</span>
analyses.<span style='mso-spacerun:yes'>  </span>Although we anticipate
incorporating some likelihood algorithms, they will be quite rudimentary.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>Second,
the program does not do sequence alignment of any kind.<span
style='mso-spacerun:yes'>  </span>Sequence comparison is (computationally)
quite a different problem from standard parsimony analysis. If you need
sequence alignment, get a program that does it properly. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>Third,
the program does not incorporate methods which are potentially useful but are
somewhat experimental.<span style='mso-spacerun:yes'>  </span>The &quot;support
weighting&quot; method of Farris (implemented in Farris' program <span
class=SpellE><b>zac</b></span>) is not included in TNT.<span
style='mso-spacerun:yes'>  </span>That method (which is based on mapping
character changes on a tree in order to evaluate it) requires operations quite
different from the ones used in TNT; we do not anticipate including that method
in the program.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>Fourth,
the program uses exact algorithms for Sankoff characters.<span
style='mso-spacerun:yes'>  </span>These work fine for low-medium numbers of
states, but they are not very efficient for very large numbers of states.<span
style='mso-spacerun:yes'>  </span>Thus, for step matrix characters with many
states, TNT is not very efficient.<span style='mso-spacerun:yes'>  </span>Note
that this applies only to Sankoff (&quot;step-matrix&quot;) characters; additive
and <span class=SpellE>nonadditive</span> characters with many states <b
style='mso-bidi-font-weight:normal'>are</b> treated efficiently. <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>Fifth, the exact solution algorithms in
TNT (&quot;implicit enumeration&quot;) are not <span class=GramE>specially</span>
efficient their speed is about the same as that of PAUP* or the 15-year-old,
16-bit Hennig86.<span style='mso-spacerun:yes'>  </span>Since the program is
conceived mostly as a tool for analysis of large data sets, there seemed to be
no point in using energy in improving the implicit enumeration algorithms. <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>Sixth, TNT does not implement any kind
of multiple-cut-swapping (commands <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>mswap</i></b></span>, <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>swap</i></b>,
<span class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>tswap</i></b></span>, and <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>altswap</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> </i></b>in
Nona/Pee-Wee).<span style='mso-spacerun:yes'>  </span>Those swappers were less
effective than multiple addition sequences.<span style='mso-spacerun:yes'> 
</span>Likewise, the <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>swap </i></b>command of Nona/Pee-Wee (i.e.
report fit differences when moving specified clade around in the tree) is not
directly implemented in TNT (it would probably be easy to implement that using
the <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>sprit
</i></b>or <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>tbrit</i></b></span><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'> </i></b>options of the scripting
language).<span style='mso-spacerun:yes'>  </span>These are probably the only
options present in Nona/Pee-Wee but absent in TNT. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Output_and_trees,"></a><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";color:black'>Printing or saving to a Metafile, output or
trees (Windows only<span class=GramE>)<span style='font-family:"Times New Roman","serif"'><span
style='mso-spacerun:yes'>  </span></span><span style='font-size:12.0pt;
font-family:"Times New Roman","serif"'>(</span></span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'><a href="#_Index"><span
style='color:black'>back to index</span></a>)</span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'>The Windows version of TNT has rudimentary printing
capabilities.<span style='mso-spacerun:yes'>  </span>You can print the display
buffer as a text file, using <u>File/Output/<span class=SpellE>PrintDisplayBuffer</span></u>
(optionally, you can save the text in the display buffer to a file, and print
it later with your <span class=SpellE>favorite</span> word processor; choose <u>File/Output/<span
class=SpellE>OpenOutputFile</span></u>, and all newly produced output will be
written to the file; optionally, with <u>File/Output/<span class=SpellE>SaveDisplayBuffer</span></u>,
you can save previously produced output).<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>To print tree diagrams, you have to set the pre-view for trees as ON
(under <u>Format/<span class=SpellE>PreviewTrees</span></u>).<span
style='mso-spacerun:yes'>  </span>If you want to map (=optimize) characters in <span
class=SpellE>color</span>, choose <u>Format/<span class=SpellE>MapCharactersInColor</span></u>
(set the <span class=SpellE>colors</span> you like with <u>Format/<span
class=SpellE>ColorsForMapping</span></u>).<span style='mso-spacerun:yes'> 
</span>Then, draw the trees and (when in pre-view screen) press
&quot;P.&quot;<span style='mso-spacerun:yes'>  </span>When in pre-view screen,
pressing &quot;M&quot; saves the tree diagram to a metafile (which can be later
processed/printed with Corel Draw, or exported to Microsoft Word or Power
Point).<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Data_Input"></a><a name="_Data_Input_"></a><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'>Data Input </span><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;mso-fareast-font-family:"Times New Roman";color:black'><span
style='mso-spacerun:yes'>  </span></span><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'>(<a href="#_Index"><span style='color:black'>back
to index</span></a>)</span><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>TNT reads matrices in Hennig86 format, with some refinements.<span
style='mso-spacerun:yes'>  </span>Normally, the data will be included in a
file. The basic format for data input is: <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB'>xread</span></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>'<span
class=GramE>optional</span> title, starting and ending<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'> </span><span class=GramE>with</span> quotes (ASCII
39)'<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB'>nchar</span></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'> <span
class=SpellE>ntax</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>Taxon0<span
style='mso-spacerun:yes'>   </span>0000000000<o:p></o:p></span></p>

<h2><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black'>Taxon1<span style='mso-spacerun:yes'>   </span>0010111000<o:p></o:p></span></h2>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>Taxon2<span
style='mso-spacerun:yes'>   </span>1011110000<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>Taxon3<span
style='mso-spacerun:yes'>   </span>1111111000<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>.....<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span class=SpellE><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>TaxonN</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span>1111111000<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:70.9pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>the</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> semicolon at the end is normally not required but is
useful to detect errors (e.g. is the number of taxa set too high?).<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Polymorphisms can be read, by enclosing the state(s) in square
brackets.<span style='mso-spacerun:yes'>  </span>By default, up to 16 states
are allowed by <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>xread</i></b></span>, using symbols 0-9 to
indicate states 0-9, and A-F to indicate states 10-15.<span
style='mso-spacerun:yes'>  </span>This can be changed with the <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>nstates</i></b></span> command, which defines the number of states (and
data type) to be subsequently read; in Windows versions, this can be changed
with <u>Format</u>/<span class=SpellE><u>DataType</u></span>.<span
style='mso-spacerun:yes'>  </span>If the data are defined as DNA (with <u>Format/<span
class=SpellE>DataType</span> </u>under menus, or using the command <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>nstates</i></b></span> <span class=SpellE><span class=GramE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>dna</i></b></span></span><span
class=GramE>;</span>) the IUPAC nucleotide codes (including polymorphisms) are
recognized and used throughout.<span style='mso-spacerun:yes'>  </span>The states
are internally stored as A=0, G=1, C=2, D=3, and gap=4.<span
style='mso-spacerun:yes'>  </span>If the data are instead defined as proteins
(with the menus, or using <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>nstates</i></b></span> <span
class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>prot</i></b></span></span><span class=GramE>;</span>),
the IUPAC codes are recognized and used throughout.<span
style='mso-spacerun:yes'>  </span>For 32 states, non-protein data, the symbols
0-9 and A-V indicate states 0-31.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>If the data are defined as smaller numbers of states, they occupy less
memory.<span style='mso-spacerun:yes'>  </span>This may be necessary for large
data sets.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The data can also be read as interleaved.<span
style='mso-spacerun:yes'>  </span>For this, all that is required is that each
block of data is preceded by either <span class=GramE>the &amp;</span> symbol
or the ASCII character number 4 (the latter is what PAUP* uses). The taxa in
each block must have the same exact names (including capitals).<span
style='mso-spacerun:yes'>  </span>The taxa in each block can be arranged in a
different order; the taxon numbers correspond to the first <span class=SpellE>occurence</span>
of a name.<span style='mso-spacerun:yes'>  </span>A taxon which is not included
in a given block, will have only missing entries for the characters in that
block; the same number of characters must be specified for all the taxa within
a given block.<span style='mso-spacerun:yes'>  </span>Each row of characters
must end with a carriage return.<span style='mso-spacerun:yes'>  </span>The end
of the data is indicated with a semicolon; if some characters were never
specified, they are left as missing entries (and a warning is issued).<span
style='mso-spacerun:yes'>   </span>If some taxon names were never defined, a
warning is issued.<span style='mso-spacerun:yes'>  </span>The interleaved
format allows mixing of different data types, by simply enclosing the
corresponding string (<span class=SpellE>prot</span>, <span class=SpellE>num</span>,
or <span class=SpellE>dna</span>) in square brackets right after the &amp;
symbol.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>When the data are being read as interleaved, it is possible for
different blocks of data to have different formats.<span
style='mso-spacerun:yes'>  </span>For this, specify between square brackets,
immediately following the '&amp;' that indicates a new block, the format of the
data (numeric, <span class=SpellE><span class=GramE>dna</span></span>,
proteins, continuous).<span style='mso-spacerun:yes'>  </span>To specify how to
read a state in subsequent commands that refer to states (<b><i>cost</i></b>, <b><i>change</i></b>,
or <span class=SpellE><b><i>usminmax</i></b></span>), use the '/' option of the
<span class=SpellE><b><i>nstates</i></b></span><b><i> </i></b>command. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt;tab-stops:178.35pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>                                      </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Continuous_characters_(back"></a><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'>Continuous characters </span><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'>(<a href="#_Index"><span style='color:black'>back
to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>While other programs require that continuous characters be discretized,
TNT can deal with continuous characters as such.<span
style='mso-spacerun:yes'>  </span>This avoids the use of the rather <i>ad hoc</i>
methods that have been proposed to discretize continuous distributions in
phylogenetic analysis (gap-coding, Thiele's method, etc.; see Farris, 1990 for
discussion of some of these methods). If there is significant variability in
one of the terminals, it will probably be best represented by a range of one
(or two) standard deviations around its mean.<span style='mso-spacerun:yes'> 
</span>For normal distributions, this automatically takes care of
non-significant differences. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Continuous characters in TNT can have states 0-65, with 3 decimals
(thus, when not doing implied weighting, tree scores are reported always with 3
decimals).<span style='mso-spacerun:yes'>  </span>They are optimized always as
additive, i.e., using Farris optimization.<span style='mso-spacerun:yes'> 
</span>They cannot be turned to <span class=SpellE>nonadditive</span> or <span
class=SpellE>sankoff</span>.<span style='mso-spacerun:yes'>  </span>The
continuous characters must be the first ones in the matrix (i.e. the first
block or blocks, followed by blocks with other data formats).<span
style='mso-spacerun:yes'>  </span>Each value must be separated by a blank or
whitespace; ranges are indicated by two values separated by a dash (-).<span
style='mso-spacerun:yes'>  </span>Missing entries are indicated only as
question marks (?).<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The treatment for the data when there are continuous characters is
rather transparent.<span style='mso-spacerun:yes'>  </span>The commands/options
that show reconstructions (<b><i>recons</i></b> command, or <u>Optimize/Characters/Reconstructions</u>)
or count number of specific transformations (<b><i>change</i></b> command, <u>Optimize/<span
class=SpellE>CountSpecificChanges</span></u>) cannot be applied to continuous
characters.<span style='mso-spacerun:yes'>  </span>Continuous characters can be
edited with the <span class=SpellE><b><i>xread</i></b></span><b><i>=</i></b>
command, and with the menu option <u>Data/Edit/Taxon</u>, but not <span
class=GramE>with<span style='mso-spacerun:yes'>  </span><u>Data</u></span><u>/Edit/Character</u>.<span
style='mso-spacerun:yes'>  </span>Continuous characters can be named with the <span
class=SpellE><b><i>cnames</i></b></span><b><i> </i></b>command, but their
states cannot. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Standardization of continuous characters (i.e. rescaling so that the
values are on a common scale) is left to the user.<span
style='mso-spacerun:yes'>  </span>Under pre-defined weights, standardization
will normally be an issue.<span style='mso-spacerun:yes'>  </span><span
class=GramE>Under<span style='mso-spacerun:yes'>  </span></span><a
href="#_Implied_Weighting__1"><span style='color:windowtext'>implied weighting</span></a>,
only the default formula can be applied (i.e. user-weighting functions are not
allowed for continuous characters).<span style='mso-spacerun:yes'> 
</span>Since continuous characters tend to have a larger <b>s-m </b>difference
(<b>s</b>: steps, <b style='mso-bidi-font-weight:normal'>m</b>: minimum
possible), implied weighting should normally penalize them rather heavily.
Thus, standardization of continuous characters is probably not so important
under implied weighting.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Merging_Data_Files"></a><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'>Merging</span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'> </span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'>Data</span><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black'> </span><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman";color:black'>Files </span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>dmerge</i></b></span> command merges data
files, and saves them as blocks; the character names and settings are also
merged (in Windows version, <u>File/<span class=SpellE>MergeDataFiles</span>, </u>using
<span class=SpellE>Ctrl+Left</span> Mouse Button to select multiple
files).<span style='mso-spacerun:yes'>  </span>The <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>dmerge</i></b></span>
command also merges (by using * as argument) the characters with identical
character names (in Windows version, with <u>Data/<span class=SpellE>MergeHomonymousCharacters</span></u>).<span
style='mso-spacerun:yes'>  </span>Some basic rules of correspondence between
states and state names must be satisfied.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Basic_Character_Settings"></a><span lang=EN-GB style='font-size:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'>Basic
Character <span class=GramE>Settings<span style='font-family:"Times New Roman","serif"'><span
style='mso-spacerun:yes'>  </span></span><span style='font-size:12.0pt;
font-family:"Times New Roman","serif"'>(</span></span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'><a href="#_Index"><span
style='color:black'>back to index</span></a>)</span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'><o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>In the Windows version, characters settings can be determined with <u>Data/<span
class=SpellE>CharacterSettings</span></u>. Current settings can be displayed
with <u>Data/<span class=SpellE>ShowStatus</span></u>. Alternatively, settings
can be included in the data file, with the <span class=SpellE><b><i>ccode</i></b></span><b><i>
</i></b>command. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>ccode</i></b></span> command is similar to
Hennig86's.<span style='mso-spacerun:yes'>  </span>It uses <span class=SpellE>specifiers</span>
to determine actions on subsequently selected characters: <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>+<span
style='mso-tab-count:1'>   </span><span class=GramE>make</span> additive<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>-<span
style='mso-tab-count:1'>   </span>make <span class=SpellE>nonadditive</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>[<span
style='mso-tab-count:1'>   </span><span class=GramE>activate</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>]<span
style='mso-tab-count:1'>   </span>deactivate<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>/N<span
style='mso-tab-count:1'>  </span>give weight N (if no number immediately <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>    </span><span class=GramE>follows</span> the slash,
set weight to 1)<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>(<span
style='mso-tab-count:1'>   </span><span class=GramE>apply</span> step-matrix
costs <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>)<span
style='mso-tab-count:1'>   </span>make additive or <span class=SpellE>nonadditive</span>
again<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>ccode</i></b></span> command always must end
with a semicolon.<span style='mso-spacerun:yes'>  </span>The <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>ccode</i></b></span> command does not recognize character names, or
character groups (it does recognize <span class=GramE>the @</span> option to
select from a particular block). By default, TNT considers all characters <span
class=SpellE>nonadditive</span> (<b style='mso-bidi-font-weight:normal'>this is
the <span class=SpellE>oppossite</span> of NONA and Hennig86</b>), active, and
of weight 1. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The costs of character-state transformations can be defined with the <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>cost</i></b>,
<span class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>smatrix</i></b></span>, or <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>cstree</i></b></span> commands
(see below); note that the costs for character-state trees are stored in the
costs, so they are a type of &quot;step-matrix&quot; characters.<span
style='mso-spacerun:yes'>  </span>Step-matrix characters for which the transformation
costs fit a character-state tree (i.e. additive relationships between states)
are (for implied weighting purposes) internally recoded as binary. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Scopes,_sets,_and"></a><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'>Scopes,
sets, and <span class=GramE>blocks<span style='font-family:"Times New Roman","serif"'><span
style='mso-spacerun:yes'>  </span></span><span style='font-size:12.0pt;
font-family:"Times New Roman","serif"'>(</span></span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'><a href="#_Index"><span
style='color:black'>back to index</span></a>)</span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'><o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>For many commands, it is necessary to specify series of numbers
(representing sets of trees, taxa, or characters).<span
style='mso-spacerun:yes'>  </span><b><u>Numbering for everything starts from 0</u></b>
(as in Hennig86 and Pee-Wee/NONA).<span style='mso-spacerun:yes'>  </span>The
characters (if they have been named, see below) and taxa can be accessed using
either their numbers or their names.<span style='mso-spacerun:yes'>  </span>For
any command that takes ranges, two numbers separated by a period (X.Y) indicate
a range (from X to Y, inclusive).<span style='mso-spacerun:yes'>  </span>A blank
space before the period indicates that the range starts from the first possible
value, and a blank after indicates that the range ends in the last possible
value.<span style='mso-spacerun:yes'>  </span>Note that names cannot be
separated by a period to indicate ranges. Except for the <span class=SpellE>ccode</span>
command (where they have a special meaning), the + (or <span class=GramE> )</span>
symbols indicate inclusion (or exclusion) from the list.<span
style='mso-spacerun:yes'>  </span>Also, up to 32 groups of trees, characters,
and taxa can be defined.<span style='mso-spacerun:yes'>  </span>After having
defined a group, enclosing in curly braces ({}) the group number (or name, if
named) is equivalent to specifying each of the members of the group.<span
style='mso-spacerun:yes'>  </span>For taxon specifications, using @X Y refers
to all the terminals included in node Y of tree X; under Windows versions, the
equivalent is accomplished by selecting nodes under tree-viewing mode (<u>Trees</u>/<u>View</u>;
see below).<span style='mso-spacerun:yes'>  </span>For character specifications,
using @X Y Z refers to the <span class=SpellE>Yth</span> and <span
class=SpellE>Zth</span> characters in block X (note that Y and Z can themselves
be ranges; if the data actually contain blocks, the first one is numbered as 1,
and block 0 refers to the entire set of characters).<span
style='mso-spacerun:yes'>  </span>The blocks can be referred to by their names
(if defined, see below; &quot;all&quot; is always used as name for the entire
matrix). Within execution of a given command, the @X for characters remains in
effect <span class=SpellE>untill</span> deactivated explicitly with @0 or
@all.<span style='mso-spacerun:yes'>  </span>If the data are read as interleaved,
the blocks of data are automatically preserved (although they can be changed
with the <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>blocks</i></b> command).<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Character_and_block"></a><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'>Character
and block names </span><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;mso-fareast-font-family:"Times New Roman";color:black'><span
style='mso-spacerun:yes'>  </span></span><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'>(<a href="#_Index"><span style='color:black'>back
to index</span></a>)</span><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Character names can be defined with <u>Data/<span class=SpellE>EditData</span>/<span
class=SpellE>CharacterNames</span></u>, or alternatively, with the <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>cnames</i></b></span> command. The syntax for <span class=SpellE><b><i>cnames</i></b></span><b><i>
</i></b>is as follows: <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB'>cnames</span></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>[0 <span
class=SpellE>First_<span class=GramE>block</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>[1 <span
class=SpellE>Second_<span class=GramE>block</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{0
zero <span class=SpellE>state_zero</span> <span class=SpellE>state_one</span> <span
class=SpellE>state_<span class=GramE>two</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{1
one <span class=SpellE>state_zero</span> <span class=SpellE>state_one</span> <span
class=SpellE>state_<span class=GramE>two</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{2
two <span class=SpellE>state_zero</span> <span class=SpellE>state_one</span> <span
class=SpellE>state_<span class=GramE>two</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{+ <span
class=GramE>three</span> <span class=SpellE>state_zero</span> <span
class=SpellE>state_one</span> <span class=SpellE>state_two</span> ; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{+ <span
class=GramE>four</span> <span class=SpellE>state_zero</span> <span
class=SpellE>state_one</span> <span class=SpellE>state_two</span> ; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>An additional semicolon is needed to end the <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>cnames</i></b></span>
statement.<span style='mso-spacerun:yes'>  </span>The names must all be defined
together; character name definitions can be changed with <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>cnames</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> +N <span
class=SpellE>charname</span> <span class=SpellE>statename</span>(s);</i></b>
(this changes character/state names, only one at a time). The names preceded by
opening square brackets, [, are names for blocks, and the names preceded by
curly braces, {, are character and state names.<span style='mso-spacerun:yes'> 
</span>Not all characters (or blocks) must be named in a <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>cnames</i></b></span>
statement; name what you need.<span style='mso-spacerun:yes'>  </span>The +
symbol means &quot;the character (or block) following the last one named&quot;
(if no character or block had been named before, this is the first character or
block). The characters within a block can be named according to their in-block
numbering sequence, by using <span class=GramE>the @</span> option: <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB'>cnames</span></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>[+ <span
class=SpellE>First_<span class=GramE>block</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>[+ <span
class=SpellE>Second_<span class=GramE>block</span></span><span class=GramE> ;</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>@<span
class=SpellE>First_block</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{0 <span
class=SpellE>zero_of_first</span> <span class=GramE>.... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{1 <span
class=SpellE>one_of_first</span> <span class=GramE>.... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{2 <span
class=SpellE>two_of_first</span> <span class=GramE>.... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{3 <span
class=SpellE>three_of_first</span> <span class=GramE>.... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{4 <span
class=SpellE>four_of_first</span> <span class=GramE>.... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>@<span
class=SpellE>Second_block</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{0 <span
class=SpellE>zero_of_second</span> <span class=GramE>... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{1 <span
class=SpellE>one_of_second</span> <span class=GramE>... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{+ <span
class=SpellE>two_of_second</span> <span class=GramE>... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>{+ <span
class=SpellE>three_of_second</span> <span class=GramE>... ;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'>; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Changing the reading frame with @<span class=SpellE>blockname</span>
resets to 0 the value of the + symbol for character names.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Step-Matrices"></a><a name="_Step-Matrices_(back_to"></a><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black'>Step-Matrices</span><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'> (<a href="#_Index"><span style='color:black'>back
to index</span></a>)</span><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
mso-bidi-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>The
step-matrices can be defined from the menus (with <u>Data/<span class=SpellE>CharacterSettings</span></u>),
or via the <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>cost</i></b> or <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>smatrix</i></b></span> commands.<span
style='mso-spacerun:yes'>  </span>The first defines transformation costs for sets
of characters in particular; the second defines and stores them, for later
application to sets of characters. The <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>cost</i></b> command has the following
syntax: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span></span><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB'>cost</span></span><span lang=EN-GB style='font-size:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";mso-bidi-font-family:
"Times New Roman";color:black;mso-ansi-language:EN-GB'> N =<span
style='mso-spacerun:yes'>   </span>...costs... ; <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>where</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> &quot;costs&quot; (see below) are the step-matrix
costs of character(s) N; note that the <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>cost</i></b> command does not make
characters step-matrix, only defines their costs (the <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>ccode</i></b></span>
command is necessary for this, with &quot;(&quot; making the character
step-matrix, and &quot;)&quot; non-step-matrix).<span
style='mso-spacerun:yes'>  </span>The <span class=SpellE>smatrix</span> command
has the following <span class=SpellE>synthax</span>: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span></span><span
class=SpellE><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman";
color:black;mso-ansi-language:EN-GB'>smatrix</span></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'> =S
(<span class=SpellE>xxxx</span>) ...costs... ; <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>where</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> &quot;costs&quot; are saved in internal step-matrix
number S (named <span class=SpellE>xxxx</span>). Once defined, the step-matrix
can be applied to character(s) N, using <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Courier New";mso-bidi-font-family:"Times New Roman";color:black;
mso-ansi-language:EN-GB'>smatrix</span></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'> +S
N ; <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span class=GramE><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>or</span></span><span lang=EN-GB style='font-size:
14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span></span><span
class=SpellE><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Courier New";mso-bidi-font-family:"Times New Roman";
color:black;mso-ansi-language:EN-GB'>smatrix</span></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Courier New";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'> +<span
class=SpellE>xxxx</span> N ; <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'>The syntax for the costs themselves
is similar for both the <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>cost</i></b> and <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>smatrix</i></b></span>
command: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h3><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black;mso-ansi-language:EN-GB'>X&gt;Y Z U/V <span class=GramE>W ;</span> <o:p></o:p></span></h3>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>defines</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> as Z the cost of transformation from (any state in) X
to (any state in) Y, and as W the cost of transformation between (any states
in) U or V.<span style='mso-spacerun:yes'>  </span>X, Y, U or V can be several
states, enclosed in square brackets (as in the <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>xread</i></b></span>
command); if the data have been defined as DNA, the IUPAC codes for
polymorphisms apply; <span class=GramE>using ?</span> <span class=GramE>indicates</span>
all possible states.<span style='mso-spacerun:yes'>  </span>If Z or W is
replaced by the letter <span class=SpellE>i</span>, the cost is set to 1000
(presumably, &quot;impossible,&quot; but this really depends on the other
costs).<span style='mso-spacerun:yes'>  </span>When the &gt; symbol is replaced
by a slash, /, this indicate symmetry in transformation costs. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>The
minimum possible number of steps for step-<span class=GramE>matrix<span
style='mso-spacerun:yes'>  </span>characters</span> is calculated with <i
style='mso-bidi-font-style:normal'>approximate </i>algorithms (in PAUP* the
minimum cannot be calculated at all for step-matrix characters, and therefore
implied weighting cannot be applied).<span style='mso-spacerun:yes'> 
</span>Beware that for very complex transformation costs (e.g. random numbers
between 1 and 30 for each cost), the algorithms used by TNT can sometimes
overestimate the minimum possible length in a few steps.<span
style='mso-spacerun:yes'>   </span>These algorithms are more prone to error
when there are polymorphic taxa.<span style='mso-spacerun:yes'>  </span>If in
doubt of whether the program is calculating accurately the minimum possible
steps for a <span class=SpellE>sankoff</span> character, use the <span
class=SpellE><b><i>usminmax</i></b></span><b><i> </i></b>command to determine a
user-defined minimum.<span style='mso-spacerun:yes'>  </span>If the
user-minimum is set to 1, all <span class=SpellE>sankoff</span> characters will
be considered &quot;informative.&quot;<span style='mso-spacerun:yes'> 
</span>Then, you either optimize all characters, or you can do a search for
each character, so as to make sure what the real minimum for each character is.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>The
step calculations during searches are exact for any type of
transformation.<span style='mso-spacerun:yes'>  </span>The algorithms used
consider as possible assignments for optimizations all the states that occur
between 0 and the largest state (states beyond the largest one <span
class=SpellE>occurying</span> in the matrix are not considered; states between
0 and the largest state are considered even if they are not present in any
terminal taxon).<span style='mso-spacerun:yes'>  </span>This is more or less
equivalent to <span class=SpellE>to</span> the &quot;<span class=SpellE>allstates</span>&quot;
options of PAUP*, with the difference that PAUP* tries (as I understand it) all
the states defined in the step-matrix (instead of the largest state observed in
the terminals).<span style='mso-spacerun:yes'>  </span>It is possible (although
unlikely) that in the case of complex transformation costs, if some state
larger than the ones present in the terminals is intermediate between others,
it is required to obtain the minimum length. For example, <span class=SpellE>supposse</span>
you have DNA some characters where the only observed states are A, C and G,
where all transformations cost 10, except to or from T, which costs 6; whether
or not T is included among the possible states determines whether the minimum
cost can be 20 or 18 (perhaps even influencing whether the character is
considered informative or not).<span style='mso-spacerun:yes'>  </span>Then,
you can tell TNT that the maximum number of states to consider for all <span
class=SpellE>sankoff</span> characters is some state (in the case of DNA data,
the largest site is T = 3 and a gap is a fifth state = 4; in the case of
protein data the largest state is U = 20, and in the case of 32 alphanumeric
states the maximum state is V = 31).<span style='mso-spacerun:yes'> 
</span>This must be done <i>prior<b> </b></i>to the <span class=SpellE>the</span>
definition of costs. This obviously slows down calculations, so TNT pays
attention to this only in those cases when it does make a difference (i.e. only
when length could change by including the larger state(s)). <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>Note
that the branch-swapping algorithms only look at trees where the currently
designated outgroup is outside everything else.<span style='mso-spacerun:yes'> 
</span>If you have asymmetric costs for some characters, and you want the
program to choose the rooting that minimizes the overall cost, you have to add
an all-missing ancestor. This is different from the way PAUP* works: when
step-matrix asymmetric characters are present, PAUP* also tries <span
class=SpellE>rerootings</span> of the tree (i.e. it does moves which put <span
class=GramE>the outgroup</span> &quot;inside&quot;).<span
style='mso-spacerun:yes'>  </span>If you do not include an all-missing ancestor
in TNT, or do not force monophyly of all but the outgroup taxon in PAUP*, the
two programs may produce different results. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Ancestral states (for step-matrix asymmetric characters<span
class=GramE>) <a name="_Ancestral_states_(for"></a><span style='font-size:12.0pt;
font-family:"Times New Roman","serif";mso-bidi-font-weight:normal'><span
style='mso-spacerun:yes'> </span></span><span style='font-size:12.0pt;
font-family:"Times New Roman","serif"'>(</span></span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'><a href="#_Index"><span
style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>For characters with symmetric transformation costs, the root states will
always include the states in the outgroup taxon among the possible states.<span
style='mso-spacerun:yes'>  </span>This may not be the case for step-matrix asymmetric
characters; for example, suppose that going from 0 to 1 is very expensive and
going from 1 to 0 is very cheap; if the outgroup has state 0, it may be better
to assign state 1 to the root, and then postulate several independent changes
from 1 to 0 than a single change from 0 to 1.<span style='mso-spacerun:yes'> 
</span>That may or may not be reasonable, depending on what the outgroup states
represent.<span style='mso-spacerun:yes'>  </span>If the outgroup represents a
series of successive sister groups with the same state (example: a wingless
ancestor for hexapods, with wing gain being more expensive than wing loss),
assigning to the root a state different from the one in the outgroup taxon
would imply a number of uncounted events.<span style='mso-spacerun:yes'> 
</span>In those cases, it is possible to consider the states in <span
class=GramE>the outgroup</span> as ancestral that is, choose for possible
state assignments for the root only from among the states in the outgroup
taxon. This can be done by choosing <u>Data/<span class=SpellE>CharacterSettings</span></u>,
then clicking on the &quot;ancestral&quot; option, and selecting the characters
you want <span class=SpellE>o</span> set. Alternatively, you can use the <span
class=SpellE><b><i>ancstates</i></b></span><b><i> </i></b>command, and include
this in the data file itself.<span style='mso-spacerun:yes'>  </span>Note that
the designation of a character as &quot;ancestral&quot; has no effect if the
character is not an asymmetric step-matrix character. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Nexus files </span><a name="_Implied_Weighting"></a><a
name="_Implied_Weighting_"></a><a name="_Nexus_files_(back"></a><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black'>back to index</span></a>)</span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Arial;color:black'><o:p></o:p></span></h1>

<h4 style='text-indent:35.4pt'><span lang=EN-GB style='font-family:"Times New Roman","serif";
mso-fareast-font-family:"Times New Roman";color:black'><o:p>&nbsp;</o:p></span></h4>

<h4 style='text-indent:35.4pt'><span lang=EN-GB style='font-family:"Times New Roman","serif";
mso-fareast-font-family:"Times New Roman";color:black'>The basic features of
the Nexus format are supported in TNT.<span style='mso-spacerun:yes'> 
</span>When parsing a file, if the first string in the file is
&quot;#NEXUS&quot; (and the macro language is turned off), then TNT will parse
the file as a Nexus file.<span style='mso-spacerun:yes'>  </span>So, you simply
open the nexus file in the same way you would open a native TNT file.<span
style='mso-spacerun:yes'>  </span>The only blocks that will be read are those
corresponding to data, trees, and assumptions (commands <span class=SpellE>ctype</span>,
<span class=SpellE>usertype</span>, include, exclude, and weights).<span
style='mso-spacerun:yes'>  </span>The data can be read in the &quot;<span
class=SpellE>dna</span>,&quot; &quot;protein&quot; or &quot;standard&quot;
formats only (e.g. format <span class=SpellE>datatype</span> = <span
class=GramE>standard;</span>).<span style='mso-spacerun:yes'> 
</span>Unrecognized commands or blocks are simply ignored or skipped.<span
style='mso-spacerun:yes'>  </span>Note that within the NEXUS file, numbering
for taxa or characters starts from 1 (one), not from 0 (zero).<span
style='mso-spacerun:yes'>  </span>You can include TNT commands in the nexus
file, at the end of the file, preceded by &quot;<b style='mso-bidi-font-weight:
normal'>begin <span class=SpellE>tnt</span>;</b>&quot; (with an <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>end </i></b>at
the end, which is ignored by TNT; otherwise, PAUP* complains that end of file
was found when reading a TNT block). <o:p></o:p></span></h4>

<h4 style='text-indent:35.4pt'><span lang=EN-GB style='font-family:"Times New Roman","serif";
mso-fareast-font-family:"Times New Roman";color:black'>TNT can also export data
or trees in Nexus format. For this, choose the <u>Data/Export </u>menu option
(or the <b><i>export </i></b>command).<span style='mso-spacerun:yes'> 
</span>The <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>export </i></b>command allows embedding commands (for PAUP* or TNT) at
the end of the file, using + after the file name, followed by the commands (a
semicolon terminates; to <span class=SpellE>embedd</span> a semicolon in the
file, use a period followed by a comma, as in the quote command). <o:p></o:p></span></h4>

<p class=MsoNormal><span lang=EN-GB style='color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Implied Weighting </span><a name="_Implied_Weighting__1"></a><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black'>back to index</span></a>)</span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Arial;color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>TNT implements the implied weighting method of Goloboff (1993), using
floating-point (=exact) fit calculations.<span style='mso-spacerun:yes'> 
</span>The fit <span class=GramE>for<span style='mso-spacerun:yes'> 
</span>characters</span> is (by default) calculated as <b>f = k / ( e + k )</b>
(where <b>e</b> = extra steps, and <b>k</b> = constant of concavity, changed
with <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>piwe</i></b></span><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>=k</i></b>).<span
style='mso-spacerun:yes'>  </span>During the searches, the program reports the
score as an increasing function of the homoplasy (or &quot;distortion&quot; to
be minimized), which is <b>1  f = e / <span class=GramE>( e</span> + k )</b>.<span
style='mso-spacerun:yes'>  </span>If you prefer the score reported as fit, it
can be calculated once the search is finished.<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Since floating <span class=GramE>points</span> calculations are used, <i
style='mso-bidi-font-style:normal'>it is very important that you evaluate group
support when doing implied weighting</i>.<span style='mso-spacerun:yes'> 
</span>Since exact ties are very unlikely, this criterion may produce <span
class=SpellE>overresolved</span> trees if poorly supported groups are not
collapsed.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The fit for discrete additive characters (including those with
character-state-trees) is calculated by decomposing the character into binary
variables.<span style='mso-spacerun:yes'>  </span>Note that this may produce
fits different from those of Pee-Wee or PAUP* (which do not do this
conversion); the fits will always be measured as higher in TNT; it has been
suggested (De <span class=SpellE>Laet</span>, 1997) that the recoding produces
a more meaningful evaluation of the relative weights. This affects only data
sets with discrete additive characters. If the same characters are defined as
continuous, the fit is calculated without decomposing into binary variables
(thus producing the same fit values that Pee-Wee or PAUP* produce for the
additive coding); treating the additive characters as continuous obviously
slows calculations. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>In the case of extra internal steps defined by the user, the same number
of extra steps will be added for each of the variables into which the character
is decomposed.<span style='mso-spacerun:yes'>  </span>If you want some of the
variables to have different numbers of steps, you have to recode the character
as binary yourself. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The method is applied to Sankoff characters as well, in which case the
fit for a character with <b>e</b> extra steps and a minimum cost among states
of <b>c</b> is calculated <span class=GramE>as<span style='mso-spacerun:yes'> 
</span><b>k</b></span><b> / ( ( e/c ) + k )</b> (where <b>k</b> is the constant
of concavity).<span style='mso-spacerun:yes'>  </span>When the costs are
defined as all unity, the formula produces results identical to those of the
standard formula used by Goloboff (1993).<span style='mso-spacerun:yes'> 
</span>If the user has defined some characters has having extra internal steps,
these are added to <b>e</b>.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>It is possible to define a user
weighting function, by specifying the values of weights for different numbers
of extra steps, relative to no extra steps.<span style='mso-spacerun:yes'> 
</span>For this, the data must be read with implied weighting ON.<span
style='mso-spacerun:yes'>  </span>The only requirement for user defined
weighting functions is that no (relative) weight is negative.<span
style='mso-spacerun:yes'>  </span>Weighting functions were the reliability increases
with the first extra steps, and then decreases, are (from the numerical point
of view) perfectly valid.<span style='mso-spacerun:yes'>  </span>To define a
weighting function, type (or include in a file to be parsed) &quot;<span
class=SpellE><span class=GramE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>piwe</i></b></span></span><span class=GramE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>[</i></b></span>&quot;
followed by as many numbers as extra steps you can have in your data set.<span
style='mso-spacerun:yes'>  </span>The numbers are read as the relative costs of
transforming from 0 to 1, 1 to 2, etc.<span style='mso-spacerun:yes'> 
</span>If the relative weights defined are less than the maximum possible extra
steps, the undefined transformations are given a weight equal to that of the
last transformation defined.<span style='mso-spacerun:yes'>  </span>If more
transformations than the maximum possible extra steps are defined, they are
simply ignored.<span style='mso-spacerun:yes'>  </span>The user defined
weighting functions are applicable only to discrete, non-<span class=SpellE>sankoff</span>
characters. When user-defined weights are in effect, the fit cannot be
calculated (i.e. only the score as an increasing function of the homoplasy is
reported). Note that user-defined weighting functions can be easily used for
clique analysis (i.e. defining the function as <span class=SpellE><span
class=GramE><b><i>piwe</i></b></span></span><span class=GramE><b><i>[</i></b></span><b><i>1
0 ;</i></b>). <o:p></o:p></span></p>

<p class=MsoBodyTextIndent><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-bidi-font-family:"Times New Roman";color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></b></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Tree-view: Selecting Nodes and Editing Tree (Windows only)</span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black;font-weight:normal'> </span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black;
font-weight:normal'>(<a href="#_Index"><span style='color:black'>back to index</span></a>)</span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:"Times New Roman";
color:black;font-weight:normal'> </span><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='color:black;mso-ansi-language:EN-GB'><span
style='mso-tab-count:1'>            </span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>The tree-view mode is toggled with <u>Trees/View</u>. Under
tree-viewing, it is possible to select nodes by clicking at them (with the left
mouse button).<span style='mso-spacerun:yes'>  </span>The node selection
toggles between red/green/unselected.<span style='mso-spacerun:yes'> 
</span>All the terminals included in nodes selected with red will be considered
as &quot;selected,&quot; unless they belong to a node selected in green which
is a member of the red selected node (combinations of red/green selections can
be used to easily define paraphyletic groups).<span style='mso-spacerun:yes'> 
</span>Note that a green selection serves no purpose unless the green node
itself is within a red node. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>When
the tree is locked to manual edition (and regardless of nodes selected with the
left button), positioning the cursor at a node and clicking on the right mouse
button produces a list of synapomorphies of the node (using character/state
names, if defined and in effect). <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>When the tree is unlocked, it can be edited by clicking on the right
mouse button.<span style='mso-spacerun:yes'>  </span>If a single node (red or
green) is selected, and the right button is clicked while the cursor is on an
unselected node, the selected node (=source) is clipped and moved to be sister
of the unselected (=target) node.<span style='mso-spacerun:yes'>  </span>If the
target node is the ancestor of source node, the branch leading to the source
node is collapsed.<span style='mso-spacerun:yes'>  </span>If the right mouse
button is clicked on a red selected node (regardless of whether other nodes are
selected), all the terminals belonging to the node are pruned from the tree
(unless they in turn belong to green selected nodes, in which case they are
left in the tree). If the right mouse button is clicked on a green selected
node, and the tree is incomplete, the user can select a terminal to add to the
tree (as sister to the green selected node). <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>When
the tree is edited, the changes are irreversible.<span
style='mso-spacerun:yes'>  </span>If you are not sure of whether you want to
keep the changes, you should save the tree to file before editing it.<span
style='mso-spacerun:yes'>  </span>To avoid mistakes, the trees are by default
locked to manual <span class=SpellE>edittion</span>; they can be unlocked with <u>Settings</u>/<u>Lock</u>
<u>trees</u>. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Saving suboptimal trees </span><a name="_Saving_suboptimal_trees"></a><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black;font-weight:normal'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'>The program can save, during
branch-swapping, suboptimal trees.<span style='mso-spacerun:yes'>  </span>The
values of suboptimal are set with <span class=SpellE><u>Analyze</u></span><u>/Suboptimal</u>,
or with the <b><i>suboptimal</i></b> command.<span style='mso-spacerun:yes'> 
</span>Two values can be set: the absolute and the relative fit difference to
accept a rearrangement; the relative fit difference (Goloboff &amp; Farris,
2002) is calculated between the tree being swapped and the rearrangement.<span
style='mso-spacerun:yes'>  </span>These two values take effect also when
collapsing trees for consensus calculation with temporary collapsing under SPR
or TBR.<span style='mso-spacerun:yes'>  </span>The relative fit difference
between the tree being swapped and the rearrangement is calculated exactly (see
Goloboff &amp; Farris, 2002, for details on how this can be done quickly),
except for TBR with asymmetric step-matrix characters, where the relative fit
difference can be either over or under estimated by the algorithms used. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Note that the new technology algorithms (sectorial searches,
tree-fusing), since they are not designed primarily to save multiple trees, do
not have a <span class=SpellE>well defined</span> behaviour in terms of the
suboptimal trees saved; some trees will be saved, others won't. Thus, if you
want suboptimal trees, do branch-swapping after having concluded a search with
new tech algorithms. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Memory management </span><a name="_Memory_Management"></a><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black;font-weight:normal'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>Except for the stuff that windows itself uses, memory management in TNT
uses special memory allocators written by Steve Farris.<span
style='mso-spacerun:yes'>  </span>This memory manager insures that TNT has no
memory leaks.<span style='mso-spacerun:yes'>  </span>For example, reading a new
data set is guaranteed to first set the whole system back to its original
state, and then reallocate memory.<span style='mso-spacerun:yes'>  </span>The
same applies to macros, which use a different memory segment.<span
style='mso-spacerun:yes'>  </span>The only thing that can cause memory
fragmentation when using TNT is repeating some of the following operations many
times: (1) re-setting the maximum amount of general RAM the program can use,
(2) re-setting the size of the display buffer, (3) re-setting the total amount
of RAM to be used by the macro language, or (4) re-setting the number of nested
input files.<span style='mso-spacerun:yes'>  </span>These things use normal
memory allocators.<span style='mso-spacerun:yes'>  </span>Other than this, TNT
can be used for any period of time, or for any number of operations, without
causing any memory fragmentation.<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Tree collapsing </span><a name="_Tree_Collapsing"></a><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal style='text-indent:35.45pt'><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>TNT implements several rules for tree
collapsing (see <span class=SpellE>Coddington</span> and <span class=SpellE>Scharff</span>,
1994, for discussion).<span style='mso-spacerun:yes'>  </span>For rule 1, which
may produce collapsed trees longer than the original resolution, the
length-calculating commands (for example, <span class=SpellE>bremer</span>
support or the tree filter when suboptimal trees are to be discarded) calculate
the length before collapsing; note that the final collapsed trees may be
longer.<span style='mso-spacerun:yes'>  </span>The collapsing for consensuses
(including the <span class=SpellE>bremer</span> support) is calculated only
temporarily.<span style='mso-spacerun:yes'>  </span>Note that rule 4 cannot be
used during consensus calculation (because it may multiply the number of
trees), but the results for the (strict) consensus under rule 1 will by
necessity be identical to those for rule 4. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>The implementation of most rules
requires no special comments.<span style='mso-spacerun:yes'>  </span>The
exception is rule 4, implemented in TNT as follows:<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:42.55pt;margin-bottom:
0cm;margin-left:85.1pt;margin-bottom:.0001pt;text-indent:-14.2pt'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>1) <span
class=GramE>take</span> the tree to be collapsed<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:42.55pt;margin-bottom:
0cm;margin-left:85.1pt;margin-bottom:.0001pt;text-indent:-14.2pt'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>2) <span
class=GramE>collapse</span> all nodes for which ancestor and descendant state
sets are identical <o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:42.55pt;margin-bottom:
0cm;margin-left:85.1pt;margin-bottom:.0001pt;text-indent:-14.2pt'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>3) <span
class=GramE>mark</span> all nodes for which ancestor and descendant state sets
share state(s).<o:p></o:p></span></p>

<p class=MsoBlockText style='margin-left:85.1pt;text-indent:-14.2pt'><span
style='color:black'>4) <span class=GramE>for</span> each combination of
possible <span class=SpellE>collapsings</span> for the nodes marked in 3, if
the length of the new tree equals that for original tree, and no node in the
new tree remains unsupported under rule 1, add the new tree to memory.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:42.55pt;margin-bottom:
0cm;margin-left:85.1pt;margin-bottom:.0001pt;text-indent:-14.2pt'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>5) <span
class=GramE>if</span> any of the trees added to memory at point 4 is a
duplicate of a previously collapsed tree, discard it.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'>The trees produced will thus not be further collapsed applying
rule 1 to them; when the trees are only condensed, existing duplicates are not
eliminated automatically (they are when the trees are
&quot;filtered&quot;).<span style='mso-spacerun:yes'>  </span>This
implementation of rule 4 is almost always more time consuming than the other
rules (except SPR or TBR, naturally), in some cases, much more time consuming.
For some input trees, this implementation of rule 4 may produce a larger number
of output trees.<span style='mso-spacerun:yes'>  </span><span class=SpellE>Coddington</span>
and <span class=SpellE>Scharff</span> (1994) did not prove that all rule 4
trees can be found by collapsing all rule 1 trees, but it is easily proven (De <span
class=SpellE>Laet</span>, pers. comm.) that, if the trees are a set of all the
trees distinct under rule 1, just deleting the trees that become longer when
collapsing produces a set identical to the rule 4 set.<span
style='mso-spacerun:yes'>  </span>However, if the trees to be collapsed are a
subset of the rule 1 trees, discarding the trees that become longer may produce
spurious results and thats why rule 4 is implemented as it is. If you are
certain that your trees are all the distinct rule 1 trees, you can get the set
of rule 4 trees by simply (a) collapsing the trees under rule 1, and then (b)
getting rid of the trees that are longer (filtering without collapsing). <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>The branch-swappers
use only binary trees as input.<span style='mso-spacerun:yes'>  </span>If some
non-binary trees exist when a search is invoked, they are automatically
resolved before the search proceeds.<span style='mso-spacerun:yes'> 
</span>This may cause some trees that were distinct to become identical when
resolved.<span style='mso-spacerun:yes'>  </span>Additionally, collapsing under
rule 1 (i.e. collapse all ambiguously supported branches) may make the trees
longer than the initial binary trees.<span style='mso-spacerun:yes'> 
</span>When any of these two things happens, a search may deliver N optimal
trees of minimum length, but if a subsequent search is done, only a reduced
number will be used as input for subsequent searches (this happens very often
in PAUP*, which always collapses the trees after a search).<span
style='mso-spacerun:yes'>  </span>To prevent this, TNT by default retains the
trees as binary after the search (note that the trees are anyway compared to
make sure that they <i style='mso-bidi-font-style:normal'>are distinct if they
are collapsed under the criterion in effect</i>).<span
style='mso-spacerun:yes'>  </span>Using these trees for consensus, <span
class=SpellE>bremer</span> support calculation, etc., requires that they be
collapsed temporarily.<span style='mso-spacerun:yes'>  </span>The temporary
collapsing is set with <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>collapse+;</i></b> (or under <u>Settings/<span
class=SpellE>ConsenseOptions</span></u>).<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>When trees are
temporarily collapsed, eliminating taxa requires special considerations.<span
style='mso-spacerun:yes'>  </span>The characters of the taxa still influence
the optimizations; only the taxon positions are ignored.<span
style='mso-spacerun:yes'>  </span>For SPR and TBR collapsing, the results
produced are those that would be obtained by (1) saving all the binary trees
that could be found by swapping on the tree to be collapsed (if a better tree
is found, swapping continues nonetheless from the original tree), (2) pruning
all the taxa to be eliminated, and (3) <span class=SpellE>consensing</span> the
pruned trees.<span style='mso-spacerun:yes'>  </span>For optimization-based
collapsing, evaluation of support for a branch considers whether merging two
branches in a <span class=SpellE>singe</span> branch when clipping a <span
class=SpellE>taxon</span> produces a supported branch (note this is <i
style='mso-bidi-font-style:normal'>not </i>the same as first collapsing the
trees under rule 1, and then clipping taxa).<span style='mso-spacerun:yes'> 
</span>Eliminating taxa when resampling, estimating consensuses, or searching <span
class=SpellE>untill</span> the consensus becomes stable, is done in the same
way.<span style='mso-spacerun:yes'>  </span>If you want to remove the taxon
from the <i>analysis</i> (as <span class=SpellE>opossed</span> to removing it
from the consensus), deactivate the taxon (with the <span class=SpellE><b><i>taxcode</i></b></span>
command, or the <u>Data/Taxa</u> menu option).<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>Beware that,
although tree-collapsing involves no special theoretical considerations, it is
of practical importance.<span style='mso-spacerun:yes'>  </span>Misusing the
collapsing possibilities provided by the program may produce absurd results.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Command-Line </span><a name="_Command-Line"></a><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'>(<a href="#_Index"><span
style='color:black'>back to index</span></a>) <o:p></o:p></span></h1>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>With <u>File</u>/<span class=SpellE><u>CommandLine</u></span>,
it is possible to enter commands for TNT.<span style='mso-spacerun:yes'> 
</span>&lt;Tab&gt; switches focus between main window and command line;
&lt;enter&gt; always takes you to the command line.<span
style='mso-spacerun:yes'>  </span>When focus is on command line, pressing  or
+ moves screen one page up or down (respectively).<span
style='mso-spacerun:yes'>  </span>The keys / and \ move through the buffer that
remembers the last commands executed.<span style='mso-spacerun:yes'>  </span>A
list of the commands (with their syntax) is obtained entering &quot;help&quot;
at the command line.<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>You can also give TNT (essentially) any
commands you want when invoking it from the DOS prompt (in the Windows version,
commands must be preceded by a semicolon; strings before a semicolon are
interpreted as names of files to open).<span style='mso-spacerun:yes'> 
</span>The <b><i>cost </i></b>command takes the redirect output symbol, &gt;<span
class=GramE>,<span style='mso-spacerun:yes'>  </span>as</span> a <span
class=SpellE>specifier</span>; in the command line the &gt; symbol can be
replaced by a closing curly brace, }. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Batch Menus (Windows only<span class=GramE>) <a name="_Batch_Menus"></a><span
style='mso-bidi-font-weight:normal'><span style='mso-spacerun:yes'> </span></span><span
style='font-size:12.0pt;font-family:"Times New Roman","serif"'>(</span></span></span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'><a
href="#_Index"><span style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>TNT allows instructions to be stored (in memory or in file), for later
execution, under <u>Settings</u>/<u>Batch</u>.<span style='mso-spacerun:yes'>  
</span>Note that some purely interactive functions (like searching for text in
the text buffer, or selecting tree nodes under tree viewing mode) cannot be stored
as batch instructions.<span style='mso-spacerun:yes'>  </span>To store
instructions, choose <u>Set menus to batch</u>, and then simply click on the
options you want (you can later edit them).<span style='mso-spacerun:yes'> 
</span>When the instructions are subsequently executed, they are run in
order.<span style='mso-spacerun:yes'>  </span>Make sure the warnings are disconnected
before running a set of instructions (as otherwise the program may halt when it
finds a warning). <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Measures of character <span class=GramE>support <a
name="_Measures_of_character"></a><span style='mso-bidi-font-weight:normal'><span
style='mso-spacerun:yes'> </span></span><span style='font-size:12.0pt;
font-family:"Times New Roman","serif"'>(</span></span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'><a href="#_Index"><span
style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>TNT
implements two types of character support measures: Bremer supports and
resampling.<span style='mso-spacerun:yes'>  </span>The Bremer supports are
calculated from the trees in memory: it is up to the user to find suboptimal
trees.<span style='mso-spacerun:yes'>  </span>The resampling can be of
different types, some of which are <span class=SpellE>preferrable</span> to
others.<span style='mso-spacerun:yes'>  </span>Standard bootstrapping is
influenced by uninformative characters (and by characters irrelevant to
monophyly of a given group).<span style='mso-spacerun:yes'> 
</span>Bootstrapping (both standard and Poisson) and <span class=SpellE>jacknifing</span>
(except for a resampling probability of 50%) are affected by character weight
and transformation costs (e.g. additive characters).<span
style='mso-spacerun:yes'>  </span>Symmetric resampling is affected by
none.<span style='mso-spacerun:yes'>  </span>Outputting results with the
frequency may produce alterations in the apparent support for groups with very
low support (and it cannot measure support for groups with very low
support).<span style='mso-spacerun:yes'>  </span>Both GC and frequency slopes
solve this problem (for slopes, supported groups have negative slopes; the
closer to 0, the better supported the group).<span style='mso-spacerun:yes'> 
</span>The supports can be measured on the groups present in any given tree
(normally, a most parsimonious tree, but using other trees provides a way to
measure how strongly contradicted some groups are).<span
style='mso-spacerun:yes'>  </span>The slopes must be measured by reference to a
pre-existing tree. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>If
some taxon has its position in the tree very poorly defined, it may strongly
decrease the support for many groups in the tree.<span
style='mso-spacerun:yes'>  </span>If you wish to find out whether the rest of
the tree is well supported, you can eliminate the taxon from the consensus when
resampling.<span style='mso-spacerun:yes'>  </span>To find out which taxon is
floating around you may have to first do a more superficial estimation, saving
the trees, and trying to prune different taxa (note that in such case you have
to take the precaution of not collapsing the trees with SPR or TBR, as
otherwise you may never find the floating taxon: once you found it, you turn
collapsing back to SPR or TBR the most effectiveand do a more careful
estimation of the resampling frequencies eliminating the evil terminals).<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>A note on Linux-Mac OS X versions </span><a name="_A_note_on"></a><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'>(<a
href="#_Index"><span style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'>Linux and Mac OS X versions of TNT
have a couple differences with the standard versions.<span
style='mso-spacerun:yes'>  </span>First, those versions can take a comma <span
class=GramE>( ,</span> ) instead of a semicolon ( ; ).<span
style='mso-spacerun:yes'>  </span>This is because the shells there use
semicolons to separate commands, and giving arguments to TNT from the command
line becomes difficult. Second difference is that those versions can run in the
background.<span style='mso-spacerun:yes'>  </span>If you want to start TNT in
the background, use <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>bground</i></b></span> as first argument,
then give the normal arguments you would give the program (do not activate
reports and do not change the <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>silent </i></b>status, but you can set
report+ to report every certain number of trees, replications, or seconds, so
that you can monitor progress by inspecting the output file; make sure you do
have output files, otherwise the program would run and exit without doing
anything!), and end with the usual '&amp;'.<span style='mso-spacerun:yes'> 
</span>TNT will not write to the console, or expect console input (at least if
no errors occur). It will write its results to a file and exit smoothly (exit
code is 0; if the program runs out of commands while in the background it exits
with code 1). Should some error occur during the search, the program writes a
message to the <span class=SpellE>ouptut</span> file, and exits with code <span
class=GramE>255.</span><span style='mso-spacerun:yes'>  </span>Try <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-spacerun:yes'> 
</span></span><span lang=EN-GB style='color:black;mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>   </span><span class=GramE><b>./</b></span><span
class=SpellE><b>tnt</b></span><b> <span class=SpellE>bground</span> p <span
class=SpellE>zilla.tnt</span>, echo=, log peep, rep+1, mu10=ho3, le, ne, quit,
&amp;<o:p></o:p></b></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>and</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> do &quot;tail f peep&quot; to monitor search
progress. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h4><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black'>Running TNT in parallel <o:p></o:p></span></h4>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'>If you install the PVM system in
your machine, you can run TNT in parallel.<span style='mso-spacerun:yes'> 
</span>If you have difficult data sets, this may be advisable even if you have
a single-processor, single-machine, as the parallelization interface of TNT
allows for a lot of control in defining search routines (e.g. you can re-<span
class=SpellE>analyze</span> sectors of the tree using any search routine you
want).<span style='mso-spacerun:yes'>  </span>Unlike other phylogeny programs
which can search in parallel (e.g. POY; Wheeler et al., 2003), TNT does not
have pre-established routines for working in parallel.<span
style='mso-spacerun:yes'>  </span>Rather, TNT allows to parallelize routines,
interacting with the scripting language; although harder to use, this is much
more flexible and can be tailored to specific needs.<span
style='mso-spacerun:yes'>  </span>The command that handles most of the options
for parallelization is <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>ptnt</i></b></span>.<span
style='mso-spacerun:yes'>  </span>With the command <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>ptnt</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>
begin </i></b>TNT can launch <i style='mso-bidi-font-style:normal'>jobs </i>in
parallel; each job can consist of one or several <i style='mso-bidi-font-style:
normal'>tasks</i>.<span style='mso-spacerun:yes'>  </span>Each task in the job
receives a set of instructions; the instructions are determined by the user,
and can be (essentially) any set of TNT commands (possibly including
instructions to launch other jobs in parallel). After launching a job, the
master TNT process continues operation normally (i.e. asynchronously).<span
style='mso-spacerun:yes'>  </span>The results from the slaves are brought back
to the master with the command <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>ptnt</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> get</i></b>;
the master does not receive results from the slaves <span class=SpellE>untill</span>
the master itself executes a <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>ptnt</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> get </i></b>command;
slaves that finished running remain dormant (i.e. not using processor time)
until the master requests results from them (or until the master sends the
slaves a new set of instructions). The master may launch several jobs at the
same time; up to 32 jobs can be running at the same time, and the master may
handle exchanges of trees/information between them. When a job is launched, it
automatically receives from its parent the data (and, optionally, starting
trees), as well as its identification number (for <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>t </i></b>tasks, numbering goes
from 0 to <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>t-1</i></b>).<span style='mso-spacerun:yes'>  </span>Since a slave task
knows its own number, this can be used to have some tasks perform differently
(alternatively, the same thing can be accomplished by launching other job(s)).
A TNT process that launched some jobs can monitor (with <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>ptnt</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> wait
</i></b>or <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>ptnt</i></b></span><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'> <span class=SpellE>gwait</span></i></b>)
the progress of the jobs, letting the user access to numbers of trees,
replications, scores, etc., in the slave tasks; based on this information, the
parent process can then recall jobs back (<span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>ptnt</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> get</i></b>),
tell the slaves to skip some instructions and move to a specific part of the
instructions (<span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>ptnt</i></b></span><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'> <span class=SpellE>goto</span> </i></b>and
<span class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>ptnt</i></b></span><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'> <span class=SpellE>skipto</span></i></b>),
or <o:p></o:p></span></p>

<p class=MsoNormal><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>send</span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> new sets of instructions to the slaves (<span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>ptnt</i></b></span><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'> again</i></b>).<span
style='mso-spacerun:yes'>  </span>The parent process can get trees from its
slave tasks, at any point (with <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>ptnt</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> spy</i></b>).<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span>A
very simple example shows how to parallelize resampling, in a job that receives
the name <span class=SpellE>psample</span> (&quot;parallel sampling&quot;): <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>ptnt</span></span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> begin <span class=SpellE>psample</span><span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>10<span
style='mso-spacerun:yes'>                       </span><span style='mso-tab-count:
2'>           </span>/<span class=GramE>*<span style='mso-spacerun:yes'> 
</span>run</span> 10 slave tasks<span style='mso-spacerun:yes'>  </span>*/ <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>+. <span class=GramE>myself<span
style='mso-spacerun:yes'>  </span>=</span><span style='mso-tab-count:1'>       </span>
<span style='mso-tab-count:1'>        </span>/* run in all hosts but master
node */ <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:70.8pt;text-indent:35.4pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>/* these are the slave instructions<span class=GramE><span
style='mso-spacerun:yes'>  </span>*</span>/ <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:70.8pt;text-indent:35.4pt'><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>collapse</span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> <span class=SpellE>tbr</span> ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:70.8pt;text-indent:35.4pt'><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>resample</span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> rep 10 <span class=SpellE>savetrees</span> ;<span
style='mso-spacerun:yes'>     </span>/*<span style='mso-spacerun:yes'> 
</span>resample */ <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:70.8pt;text-indent:35.4pt'><span
class=SpellE><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>tchoose</span></span></span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> 1. ;<span style='mso-spacerun:yes'>           </span><span
style='mso-tab-count:2'>                  </span><span
style='mso-spacerun:yes'>     </span>/* choose individual trees */ <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.4pt;text-indent:35.4pt'><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>return ;</span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span><span
class=SpellE><span class=GramE>ptnt</span></span> wait<span
style='mso-spacerun:yes'>  </span>( <span class=SpellE>tasksleft</span>[<span
class=SpellE>psample</span>] = = 0 );<span style='mso-spacerun:yes'>   
</span>/* wait for all tasks to end */ <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span class=GramE><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>keep</span></span><span lang=EN-GB style='font-size:
14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> 0 ; <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span style='mso-tab-count:1'>         </span><span
class=SpellE><span class=GramE>ptnt</span></span> get <span class=SpellE>psample</span>
;<span style='mso-spacerun:yes'>            </span><span style='mso-tab-count:
1'>      </span>/* get results from <span class=SpellE>psample</span><span
style='mso-spacerun:yes'>  </span>*/ <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><span
style='mso-spacerun:yes'>          </span><span class=GramE>collapse</span> <span
class=SpellE>notemp</span> ;<span style='mso-spacerun:yes'>         </span>/*
trees are already collapsed by the slaves */!<o:p></o:p></span></p>

<p class=MsoNormal style='text-align:justify;text-indent:35.4pt'><span
class=SpellE><span class=GramE><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>freqdif</span></span></span><span
class=GramE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'> ;</span></span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>                    </span><span
style='mso-tab-count:2'>               </span><span
style='mso-spacerun:yes'>    </span>/* calculate <span class=SpellE>freqdifs</span><span
style='mso-spacerun:yes'>  </span>*/<o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'>If the number of tasks (10 in this
case) is not specified, as many tasks as hosts minus one are used (and no task
is launched on master node); if no host selection is specified, the default
selection is used (i.e. the same one indicated in the example). <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Consensus_estimation_(back"></a><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black'>Consensus estimation</span><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black;mso-bidi-font-weight:
normal'> </span><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black'>(<a href="#_Index"><span lang=EN-US style='color:black;mso-ansi-language:
EN-US'>back to <span class=SpellE>i<span lang=EN-GB style='mso-ansi-language:
EN-GB'>ndex</span></span></span></a>)</span><span lang=EN-GB style='font-size:
14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'>TNT implements the consensus estimation method of Goloboff and
Farris (2001).<span style='mso-spacerun:yes'>  </span>This is based on making a
certain number of independent searches, and checking whether the end results of
all of them share groups.<span style='mso-spacerun:yes'>  </span>A group which
is present in all (or most) of the searches, even if the search failed to
produce optimal trees, is likely to be present in the set of optimal trees (and
thus the consensus). This can be used to have a quick idea of the approximate
results for your matrix, or to create constraints to speed up searches.<span
style='mso-spacerun:yes'>  </span>The consensus estimation is invoked with the <span
class=SpellE><b><i>qnelsen</i></b></span><b><i> </i></b>command, or under <u>Analyze/<span
class=SpellE>ConsensusEstimation</span></u>.<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Tree-searching <span class=GramE>algorithms <a
name="_Tree-searching_algorithms:_Implementati"></a><a
name="_Tree-searching_algorithms_"></a><span style='font-size:12.0pt;
font-family:"Times New Roman","serif";mso-bidi-font-family:Arial;mso-bidi-font-weight:
normal'><span style='mso-spacerun:yes'> </span></span><span style='font-size:
12.0pt;font-family:"Times New Roman","serif"'>(</span></span></span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";color:black'><a
href="#_Index"><span style='color:black'>back to index</span></a>) <o:p></o:p></span></h1>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'>The program implements several types of search algorithms; in
Windows versions, all of them are accessed with the <u>Analyze</u> menu
option.<span style='mso-spacerun:yes'>  </span>For really small data sets (i.e.
below 20-30 taxa), exact solutions can be obtained via implicit enumeration (or
&quot;branch-and-bound&quot;). For larger data sets, heuristic
(&quot;trial-and-error&quot;) methods are required. The basic algorithms
implemented in the program are <span class=SpellE><span class=GramE>wagner</span></span>
trees (with sequential addition of the taxa, in the best available position, to
form a tree as short as possible), and different types of swappers and
algorithms that make rearrangements on preexisting trees. Branch-<span
class=SpellE>swaping</span> can be of type SPR or TBR. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>For relatively messy, but not very big
data sets, the best algorithm consists of multiple random addition sequences
plus TBR (RAS+TBR); this is invoked with <u>Analyze/<span class=SpellE>TraditionalSearch</span></u>,
using <span class=SpellE><span class=GramE>wagner</span></span> trees as
&quot;starting trees,&quot; or with the <span class=SpellE><b><i>mult</i></b></span><b><i>
</i></b>command. Whether or not you are likely to have found the best trees, or
all the tree islands, depends on the ease with which the algorithm converges to
the minimum length found. For this reason, the program reports the number of
replications that reached the best score found.<span style='mso-spacerun:yes'> 
</span>The program also reports whether some replications had partial overflows
of the tree file, in which case, some most parsimonious trees may not have been
found during the search; further branch-swapping starting from the trees in
memory (&quot;RAM&quot;) can be used to find the additional trees. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>For more difficult
data sets, the special and combined algorithms will be required. Note that
instead of wasting search effort, it is often <span class=SpellE>preferrable</span>
to make one very aggressive search to make sure what the best score for your
data set is, and then produce additional (independent) hits to that score until
the strict consensus has become stable (as discussed in Goloboff, 1999). There
are four basic types of special algorithms implemented in TNT: ratchet,
drifting, sectorial searches, and fusing.<span style='mso-spacerun:yes'> 
</span>The ratchet in TNT is slightly different from the ratchet as originally
described by Nixon (1999), and as implemented in Nona/Pee-Wee.<span
style='mso-spacerun:yes'>  </span>The ratchet consists of two phases,
perturbation and search, which are sequentially repeated.<span
style='mso-spacerun:yes'>  </span>In either phase, the ratchet in TNT does not
look for multiple trees (in Pee-Wee/Nona it was necessary to set the number of
trees to save in each phase, but the best number is always just one); multiple
trees can be found only as the search phase finishes.<span
style='mso-spacerun:yes'>  </span>The ratchet always uses TBR branch swapping,
and it alternates the search phase (S) with three types of perturbation phase:
original weights (O), <span class=SpellE>upweighting</span> (U), and deleting
(D).<span style='mso-spacerun:yes'>  </span>Thus, the cycles will be:
O,S,U,S,D,S,O,S,U,S,D,S,O etc. Any of the O, U, or D phases can be skipped
(from the Ratchet <u>settings</u> dialog, or with the <b style='mso-bidi-font-weight:
normal'><i>ratchet</i></b><i><span style='mso-bidi-font-weight:bold'> </span></i>command).<span
style='mso-spacerun:yes'>  </span>During the perturbation phase, rearrangements
of score equal or better than the tree being swapped are always accepted, <span
class=SpellE>untill</span> a certain number of rearrangements have been made
(or <span class=SpellE>untill</span> a certain percentage of the total swapping
on the tree has been completed).<span style='mso-spacerun:yes'>  </span>This
seems to provide better results than the original ratchet. The &quot;<span
class=SpellE>autoconstrained</span>&quot; option calculates the (strict)
consensus of the previous tree and the tree resulting from the rearrangement
phase, and during the subsequent search phase, only rearrangements that do not
violate monophyly of the shared groups are done.<span
style='mso-spacerun:yes'>  </span>The rationale for this is that improvements
are likely to be found in areas that have changed during the perturbation
phase.<span style='mso-spacerun:yes'>  </span>Every certain <span class=SpellE>numer</span>
of constrained cycles, an unconstrained search phase is done (to insure global
optimality).<span style='mso-spacerun:yes'>  </span>If this is used in
combination with user-defined constraints, both are combined. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Tree-drifting is quite similar to the
ratchet, but the perturbation phase, instead of reweighting the characters,
accepts the moves with a probability that depends on both the relative fit
difference (Goloboff and Farris, 2001; see Goloboff, 1999) and the absolute fit
difference between the tree being swapped and the new tree.<span
style='mso-spacerun:yes'>  </span>It has the advantage that memory managing is
easier, and for that reason is the only <span class=SpellE>perturbator</span>
that sectorial-searches (see below) can use. The perturbation phase also
alternates between acceptance of optimal trees only (O), and suboptimal trees
(U): O<span class=GramE>,S,U,S,O,S,U</span> etc. Any of the O or U phases can
be skipped (the O phase, with <span class=SpellE><b><i>drift<span class=GramE>:noequal</span></i></b></span><b><i>;</i></b>
or with the <u>skip optimal-only drifting</u> option in the tree-drift settings
dialog box; the U becomes effectively an O by setting the score difference to a
very low number).<o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Sectorial-searches are of two basic
types: constraint-based and random; a combination of both is the mixed
sectorial searches.<span style='mso-spacerun:yes'>  </span>Sectorial searches
take a portion of the tree, create a reduced data set, and produce a
mini-analysis of that data set.<span style='mso-spacerun:yes'>  </span>If a
better solution for that portion of the tree is found, it is replaced back into
the original tree. Every certain number of (user-determined) rearrangements, a
round of global TBR is done (to insure global optimality).<span
style='mso-spacerun:yes'>  </span>If the sectors are below a certain size, the
mini-analysis consists of three RAS+TBR (random addition sequence <span
class=SpellE>wagner</span> trees plus TBR); if the three sequences end up in
trees of the same score, the mini-analysis is interrupted (i.e. the reduced
data is &quot;clean&quot; and not worth of further analysis); otherwise, three
additional RAS+TBR are done.<span style='mso-spacerun:yes'>  </span>If the sectors
are above that size, a certain number of iterations of tree-<span class=SpellE>drfiting</span>
is done to the reduced sector.<span style='mso-spacerun:yes'>  </span>The three
types of sectorial-search differ in how the sectors are selected.<span
style='mso-spacerun:yes'>  </span>Constraint-based searches choose the sectors
by reference to constraints: the nodes that are resolved as polytomies in the
constraint tree, connecting to no less than N branches (where N is some number
defined by the user; default is 10). A reduced data sets corresponding to each
of the polytomies in the constraint tree is analyzed, in turn; this is repeated
a certain number of times (default=3), because changing some sector may imply
that other sectors should change as well.<span style='mso-spacerun:yes'> 
</span>Random sectors are chosen at random, to be no smaller and no bigger than
a certain (user defined) size. The mixed sectorial searches use both
constraint-based and random sectors; they can only be used with multiple
addition sequences.<span style='mso-spacerun:yes'>  </span>For the mixed
sectorial search, a temporary constraint tree is created by <span class=SpellE>consensing</span>
the tree found at some stage of the present addition sequence (user defined:
this can be the <span class=SpellE><span class=GramE>wagner</span></span> tree,
which is the default, or optionally the tree produced by SPR or TBR), and this
constraint tree is used to do a constraint-based sectorial search.<span
style='mso-spacerun:yes'>  </span>Once this is finished, a random sectorial
search is done (unconstrained, or using only the user-defined constraints if
they are in effect).<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>Tree-fusing mixes
trees, producing better trees. If the trees comes from different searches, the
score is often considerably improved in very short time.<span
style='mso-spacerun:yes'>  </span>Tree-fusing produces (so to speak) a
synergistic effect for all those previous searches; this also means that the
rate of score improvement is not necessarily lineal (i.e. all the searches
before fusing were not producing a score improvement beyond some bound, but
were nonetheless accumulating &quot;momentum&quot; for the subsequent fusing). <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Determining best search parameters </span><a
name="_Determining_best_search"></a><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'>(<a href="#_Index"><span style='color:black'>back
to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'>For many data sets, the time to find best scores during searches
may depend <span class=SpellE>drammatically</span> on the <span class=SpellE>aggresivenes</span>
and parameters used during the search.<span style='mso-spacerun:yes'> 
</span>For example, using very superficial searches for difficult data sets
will keep grinding for a very long time before the best score is actually
found; using more aggressive parameters will find best score sooner.<span
style='mso-spacerun:yes'>  </span>The parameters to change are size and number
of sectors to run under random sectorial searches, number of initial
replications to submit to fusing, and rounds of tree-drifting or ratchet. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>A careful
consideration of how the data set behaves to changes in parameters is the best
way to proceed, but if you have no idea of how a data set behaves, or don't
know how to set the parameters for a search, you may trust to the program the
choice of parameters.<span style='mso-spacerun:yes'>  </span>This is done with
the <u>set initial level</u> option of the <u>New Technology </u>dialog box (or
the <b><i>level </i></b>option of the <span class=SpellE><b><i>xmult</i></b></span><b><i>
</i></b>command).<span style='mso-spacerun:yes'>  </span>If entered as a
command, the level must be a number between 0 and 10 (0 is very superficial; 10
is extremely exhaustive); if entered in the dialog box for search level, it must
be a number between 0 and 100 (again, 100 is the heaviest search).<span
style='mso-spacerun:yes'>  </span>If using a driven search (i.e. more than a
single hit of the <span class=SpellE><b><i>xmult</i></b></span><b><i> </i></b>command),
you may have the program check whether best score is being found easily or not
(and then decrease or increase the search level accordingly).<span
style='mso-spacerun:yes'>  </span>This is set with the <span class=SpellE><b><i>chklevel</i></b></span><b><i>
</i></b>option of the <span class=SpellE><b><i>xmult</i></b></span>
command.<span style='mso-spacerun:yes'>  </span>Again, letting the program try
to determine the best parameters during the search is a poor substitute for
finding the best parameters and letting them fixed during the search, and is
intended for cases where you have no time/experience to determine best
parameters by yourself. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h1><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black;mso-ansi-language:EN-US'>I</span><span
class=SpellE><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>mplementation</span></span><span lang=EN-GB style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";mso-fareast-font-family:
"Times New Roman";color:black'> notes for tree-searching</span><a
name="_Implementation_notes_"></a><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";mso-bidi-font-family:Arial;color:black;mso-bidi-font-weight:
normal'> </span><span lang=EN-GB style='mso-fareast-font-family:"Times New Roman";
color:black'>(<a href="#_Index"><span style='color:black'>back to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span style='color:black'><o:p>&nbsp;</o:p></span></p>

<h5><span style='font-family:"Times New Roman","serif";mso-fareast-font-family:
"Times New Roman";color:black'>General <o:p></o:p></span></h5>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>This section describes some details on
how the searches are implemented.<span style='mso-spacerun:yes'>  </span>It is
intended to give the user clues on how to best use the program, or at least
understand some of the ways in which the program behaves under different
circumstances. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>When all the characters have equal
weights, the swapper proceeds the fastest.<span style='mso-spacerun:yes'> 
</span>If some characters are weighted differently, the search algorithms
proceed somewhat slower (i.e. it takes longer to complete a <span class=SpellE><span
class=GramE>wagner</span></span> tree or swap completely through one tree; note
that finding a shortest tree might still be easier if the weighting increases
the structure of the data set).<span style='mso-spacerun:yes'>  </span>If the
characters are weighted using very different weights (e.g. every character is
assigned a weight from 1 to 50, at random), the search algorithms reach a floor
(depending on the data sets, about 50% slower than equal <span class=SpellE>weigths</span>).<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Searching under implied weights, since
it uses floating-point calculations, is the slowest, being 2 or 3 times slower
than equal weights (note than in PAUP*, using implied weighting slows down the
searches by orders of magnitude).<span style='mso-spacerun:yes'>  </span>The
largest speed differences with PAUP* are in running large data sets (between 20
and 50 times, sometimes more than 100 times), and implied weighting (over 500
times, for large data sets). <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>The numbers of states also affect
running times.<span style='mso-spacerun:yes'>  </span>The more states the
characters can have, the slower the program runs. The program internally packs
characters in groups of characters with 2 states, 3 to 4 states, 5 to 8 states,
9 to 16 states, and 17 to 32 states. Sankoff characters are packed always
separately.<span style='mso-spacerun:yes'>  </span>This implies that the time
differences will come when the numbers of characters in each of those
categories changes significantly.<span style='mso-spacerun:yes'>  </span>For <span
class=SpellE>sankoff</span>-style characters, the time increases rapidly with
the square of the number of states (in some portions of the code, the time
increases actually with the cube).<span style='mso-spacerun:yes'>  </span>Thus,
the algorithms used react badly to increasing numbers of states; for Sankoff
characters with 16 states or more, TNT is about as slow as POOP* (or even
slower). </span><span class=GramE><span style='font-size:11.0pt;color:black'>[
N.B</span></span><span style='font-size:11.0pt;color:black'>. as of March 2023,
these portions of the code with dependence <i style='mso-bidi-font-style:normal'>O(S<sup>3</sup>)</i>
have been substituted by code with dependence <i style='mso-bidi-font-style:
normal'>O(S<sup>2</sup>)</i>, thus significantly speeding up tree searches for Sankoff
characters with many states. This section is left as is for documentation
purposes<span class=GramE> ]</span></span><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>The implementation of searches under
implicit enumeration is similar to that in other programs, and there is nothing
special about it.<span style='mso-spacerun:yes'>  </span>As usual, exact
searches take the longest for the least poorly structured data, and the times
increase <span class=SpellE>drammatically</span> with the numbers of taxa.<span
style='mso-spacerun:yes'>  </span>Since TNT is conceived to work mostly with
large data sets, there seemed to be no much point in using energy to optimize
the implicit enumeration algorithms. <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>The tree swappers can complete swapping
on a tree faster if no <span class=GramE>additional</span> equally parsimonious
trees are being found.<span style='mso-spacerun:yes'>  </span>This is because
in such a case length calculations for a rearrangement can be abandoned as soon
as the program discovers that the tree is as long as the best one found so far;
otherwise, additional characters have to be checked to make sure the tree is no
longer than the best one found so far (and, to make things worse, the tree has
to be optimized for collapsing and compared to all the pre-existing trees, to
make sure it is not identical as collapsed).<span style='mso-spacerun:yes'> 
</span>This is used to speed up searches under multiple random addition
sequences, where a reduced number of trees is retained for each replication
(such that most of the time the search is being done with a full memory
buffer). <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h5><span style='mso-fareast-font-family:"Times New Roman";color:black'>Wagner
trees <o:p></o:p></span></h5>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Except in the case of constraints, the
addition sequence for <span class=SpellE><span class=GramE>wagner</span></span>
trees is totally randomized, except for the outgroup taxon (which is always the
first taxon added).<span style='mso-spacerun:yes'>  </span>The insertion
sequence of new taxa to the growing tree is (by default) not totally random:
the possible locations for the new taxon are tried from the root of the tree to
the tips, or from the tips to the root (which option is chosen is determined at
random, for each taxon to add; both are <span class=SpellE>equiprobable</span>).<span
style='mso-spacerun:yes'>  </span>In some extreme cases, this may be
undesirable. <span style='mso-spacerun:yes'> </span>If the data are entirely
uninformative (e.g. a matrix with no characters) and no tree collapsing is in
effect, then <span class=SpellE>pectinate</span> trees result from such
insertion sequence. It is possible to randomize the insertion sequence for new
taxa, so that all locations are tried in a random order.<span
style='mso-spacerun:yes'>  </span>This is set with <span class=SpellE><span
class=GramE><b><i>rseed</i></b></span></span><span class=GramE><b><i>[</i></b></span><b><i>;</i></b>
the alternative is <span class=SpellE><b><i>rseed</i></b></span><b><i>];</i></b>
(default, up/down sequence).<span style='mso-spacerun:yes'>  </span>For large
data sets, building a <span class=SpellE>wagner</span> tree with a randomized
insertion sequence may actually take shorter than with the up/down sequence
(that is probably because the best placement is often found somewhat in the
middle of the tree, not in the tips or root; checking the tips or root first
provides worse bounds to give up length calculations, for a greater portion of
the time).<span style='mso-spacerun:yes'>  </span>For data with no informative
characters (and with collapsing turned off), <span class=SpellE><span
class=GramE>wagner</span></span> trees with a random insertion sequence are
(more or less) equivalent to random trees.<span style='mso-spacerun:yes'> 
</span>If your data are more or less structured, setting one or the other is
irrelevant.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Note that randomization of the insertion
sequence has no effect when <span class=SpellE><span class=GramE>wagner</span></span>
trees are built under constraints (i.e. the insertion sequence is always
up/down in this case).<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h5><span style='mso-fareast-font-family:"Times New Roman";color:black'>Swappers
<o:p></o:p></span></h5>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>The two types of swapper are designed to
work as best as possible under <span class=SpellE>diferent</span> circumstances.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>The time to complete swapping on a tree
(that is, on a tree which does not lead to better trees by swapping) changes
with about the square of the number of taxa for both SPR and TBR (this is true
even when TBR actually looks at a number of rearrangements which increases
with the cube of the taxa). <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>SPR is designed to work best at the
initial stages of a search, when better trees are being found frequently; it is
not as fast as it could be for trees which are already optimal or
near-optimal.<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>TBR is designed instead to work best for
large numbers of taxa, when the trees being swapped are optimal or
near-optimal, that is, when better trees are not being found frequently, and
also to work best on well-structured data (i.e. data where there are numerous relatively
well supported groups).<span style='mso-spacerun:yes'>  </span>If the data are
very poorly structured, swapping through a tree takes longer.<span
style='mso-spacerun:yes'>  </span>For <span class=SpellE>Källersjo</span> et
al.s 2500-taxon matrix (1999), the time to complete TBR <span class=SpellE>swappping</span>
on a near-optimal tree (running on a 800 MHz PIII machine) is about 12 <span
class=SpellE>secs</span>.; PAUP* on the same machine takes over 18 minutes to
complete TBR swapping on the same tree (i.e. a 90 times speed difference;<span
style='mso-spacerun:yes'>  </span>PAUP* takes about 6 minutes to complete SPR
on the same tree, so that completing TBR for 2500 taxa in TNT is 30 times
faster than completing SPR with PAUP*). <o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:35.45pt'><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Neither type of swapper is highly
optimized for low numbers of taxa.<span style='mso-spacerun:yes'>  </span>For
small data sets, expect no big differences <span class=GramE>( i.e</span>. no
more than 5-10 times) in running times for TNT and other programs.<span
style='mso-spacerun:yes'>   </span>These take no time anyway, so it seemed best
to preserve an implementation focused on large data sets. <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><o:p>&nbsp;</o:p></span></p>

<h5><span style='mso-fareast-font-family:"Times New Roman";color:black'>Effects
of constraints on running times<o:p></o:p></span></h5>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>Heuristic
searches<span class=GramE>.-</span></span></i></b><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'> </span></i><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>There are three
types of constraints: positive tree-constraints, positive group constraints,
and negative group constraints.<span style='mso-spacerun:yes'>  </span>Tree
constraints are defined with the = option of the <i style='mso-bidi-font-style:
normal'>force </i>command (or, from the menus, as positive constraints with
no floating taxa).<span style='mso-spacerun:yes'>  </span>The latter are
defined with all other options of the <i style='mso-bidi-font-style:normal'>force
</i>command (or, from the menus, with positive constraints with floating taxa,
or negative constraints).<span style='mso-spacerun:yes'>  </span>The three
types can be used simultaneously (e.g. search for the best trees where A+B+C
from a monophyletic group, but A+B do not). <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>The tree constraints
are implemented in such a way that the moves violating the groups established
are never attempted.<span style='mso-spacerun:yes'>  </span>This type of
constraint therefore speeds up the searches (if many groups are defined, by a
significant factor).<span style='mso-spacerun:yes'>  </span>Note that the number
of trees examined to SPR-swap or TBR-swap through a single tree is the same
under constraints (i.e. the moves are counted as if effected and rejected). <o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
color:black'><span style='mso-tab-count:1'>         </span>The group
constraints (positive and negative) are implemented internally by creating a
matrix of group membership variables (where taxa belonging to a group have
state 1, taxa outside the group have state 0, and floating taxa have a missing
entry).<span style='mso-spacerun:yes'>  </span>For group constraints, all the
same moves are evaluated for length.<span style='mso-spacerun:yes'>  </span>If
the tree is within the current length bound, then the group constraints are
evaluated, and if the new tree does not pass, it is rejected (even if
shorter).<span style='mso-spacerun:yes'>  </span>Thus, using group constraints
does not speed up searches at all.<span style='mso-spacerun:yes'>   </span>If
the group constraints make the tree much longer (i.e. if they forbid many
groups present in the consensus of MPTs), they will actually slow down the
search (i.e. many moves will produce better or equally good trees, which have
to be subsequently rejected because they violate constraints). <o:p></o:p></span></p>

<p class=MsoBodyText2><span style='color:black;mso-ansi-language:EN-US'><span
style='mso-tab-count:1'>         </span>For <span class=SpellE><span
class=GramE>wagner</span></span> trees, the program adds each taxon in a
position such that no constraint is violated at any point.<span
style='mso-spacerun:yes'>  </span>For negative constraints, this means that the
first two taxa which are part of a group constrained for non-monophyly must be
placed as non-sister groups.<span style='mso-spacerun:yes'>  </span>Of course,
a better tree might be found if the non-monophyly of the group is delayed (to
be broken later, for example, by adding another taxon in between them), but
then if non-monophyly has been delayed, it may now be impossible to create
non-monophyly without at the same time violating some positive
constraints.<span style='mso-spacerun:yes'>  </span>This means that, for
negative constraints that increase tree length considerably, the <span
class=SpellE>wagner</span> trees may be quite far from the best length
achievable under the constraints (e.g. it is advisable not to use <span
class=SpellE>wagner</span> trees to estimate consensuses or <span class=SpellE>jacknife</span>
frequencies under those circumstances).<span style='mso-spacerun:yes'>  
</span>Additionally, the random addition sequence may change somewhat when
positive (tree or group) constraints are used in combination with negative
constraints.<span style='mso-spacerun:yes'>  </span>The first two members of a
group to be non-monophyletic must effectively be non-monophyletic when they are
both added to the tree, but this may be impossible if those two are in turn the
only two members of a group constrained for <span class=SpellE>monophly</span>
added so far.<span style='mso-spacerun:yes'>  </span>The addition sequence is
then checked when positive and negative groups are enforced, changing it to
prevent this.<span style='mso-spacerun:yes'>  </span>The addition sequence is
therefore not completely random when there are positive and negative
constraints in effect.<o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black'>Exact
searches<span class=GramE>.-</span> </span></i></b><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;color:black'>Both positive tree constraints and
positive group constraints speed up searches under implicit enumeration (the
more so if they constrain groups which are anyway present in the optimal
trees).<span style='mso-spacerun:yes'>  </span>Negative tree constraints slow
them down, to the extent that they make the best possible trees longer.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<h1><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;
font-family:"Arial","sans-serif";mso-fareast-font-family:"Times New Roman";
color:black'>Scripting (for programmers or advanced users)</span><a
name="_Scripting_(for_programmers"></a><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'> (<a href="#_Index"><span style='color:black'>back
to index</span></a>)<o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:35.4pt'><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>TNT has a scripting language, which allows the user to automate complex
tasks, or &quot;program&quot; TNT to do things it normally doesn't do.<span
style='mso-spacerun:yes'>  </span>The scripting language has flow control,
loops, and internal variables that can be accessed by the user.<span
style='mso-spacerun:yes'>  </span>The scripting language is normally disabled;
it is enabled by entering &quot;<b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>macro=</i>;</b>&quot; at the command
prompt.<span style='mso-spacerun:yes'>  </span>The <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>macro </i></b>command also
controls the basic settings for the macro language, like total RAM for macros,
number of variables, number of nested loops, and protection level for accessing
variables/arrays (for details, see online help for <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>macro</i></b>).<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>The variables and flow control use
numbers (actual values or internal variables) or expressions (compound
expressions, always must be enclosed in parentheses to be properly parsed). <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>Examples of scripting language can be
found in the files contained in <b>zipdruns.exe </b>(a self-extracting <span
class=SpellE>excutable</span>).<span style='mso-spacerun:yes'>  </span><span
class=SpellE><b>Exactsol</b></span> calculates trees by implicit enumeration
(using a complete down-pass optimization for each tree: it is very slow; the <span
class=SpellE><b>addtax</b></span><b> </b>routine is used as a function from
within <span class=SpellE><b>exactsol</b></span>).<span
style='mso-spacerun:yes'>  </span><span class=SpellE><b>Macswap</b></span> does
SPR swapping on a tree, and prints out a message every time it finds a better
tree (it also uses down-pass optimization to evaluate trees).<span
style='mso-spacerun:yes'>  </span><b>Sank</b> does <span class=SpellE>sankoff</span>-optimization;
it is more elaborate than the other two (it can be used only on small trees;
make sure you have set up the number of variables to a large enough number). <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>User variables<span class=GramE>.-</span> </span></i><span
lang=EN-GB style='color:black'>User variables can be accessed in any context,
by enclosing the number of variable to be accessed in single quotes.<span
style='mso-spacerun:yes'>  </span>Thus, if variable number 0 has a value of
1200, <span class=SpellE>inputtting</span> the string <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>hold '0'</i></b><i
style='mso-bidi-font-style:normal'> </i>is equivalent to inputting <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>hold
1200</i></b>.<span style='mso-spacerun:yes'>  </span>Variables can be given
names, in which case their values are accessed by enclosing their name in
single quotes.<span style='mso-spacerun:yes'>  </span>Using double quotes
instead of the single quotes is equivalent to using single quotes, except in
the case of parallel versions of TNT, where double quotes passed as
instructions to slaves are interpreted on slave, and single quotes are always
interpreted locally. Using the quotes or double quotes properly, the user
variables can act as pointers.<span style='mso-spacerun:yes'>  </span>User
variables can be defined (when declaring their name) as arrays (maximum is
5-dimensional arrays).<span style='mso-spacerun:yes'>  </span>The indices are
then enclosed in brackets, separated by a comma.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>Thus, 'n[j]' is the
j-<span class=SpellE>th</span> value for variable n (note that the arrays are
zero-based), and 'p[<span class=SpellE>x<span class=GramE>,y,z</span></span>]'
is the z-<span class=SpellE>th</span> value for row x, column y, of variable p.
Note that 'n'[j] will be parsed as the number corresponding to variable n
followed by the expression [j] (which, according to context, may or may not be
a legal expression).<span style='mso-spacerun:yes'>  </span>The indexing works
by substituting values; each time a new &quot;dimension&quot; is found, the
cell is considered to be that for the base cell plus the value of the
dimension; the user could set the values so that a &quot;matrix&quot; is
properly organized, but declaring a variable as multi-dimensional when it is
given a name automatically sets up the arrays. <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>It is also possible to enclose in the
single or double quotes an expression (which must be enclosed in parentheses);
what is inside the parentheses may, in turn, contain references to user
variables.<span style='mso-spacerun:yes'>  </span>Thus, <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                 </span><span class=GramE>set</span> 5
'(%1)' ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>will</span></span><span
lang=EN-GB style='color:black'> set variable 5 as equal to the variable
numbered as the first argument.<span style='mso-spacerun:yes'> 
</span>Similarly<span class=GramE>,<span style='mso-spacerun:yes'>  </span>if</span>
variable 0 equals 10, variable 1 equals 20, and variable 30 equals 100, then
the expression <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:2'>                   </span><span class=GramE>set</span>
5 '('0'+'1')' ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>will</span></span><span
lang=EN-GB style='color:black'> assign the value of 100 to variable 5 (i.e.
assigns to variable 5 the value of the variable whose number equals the sum of
the values of variables 0 and 1).<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>User variables can also be used to
store strings, accessed by preceding the number (or name) of the variable by a
dollar sign, $.<span style='mso-spacerun:yes'>  </span>Strings can be stored as
literal (in which case, expressions like '0' within the string are replaced by
the value that variable 0 has at the time of expanding the string; variables
can be expanded only as numbers, as well as arguments; no string expansion is
allowed within strings).<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>The values for the user variables can
be changed only with the <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>set</i></b> command.<span
style='mso-spacerun:yes'>  </span><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>Set</i></b> followed by a variable number
(or name), followed by an expression, <span class=GramE>sets</span> the value
for the variable to the value for the expression.<span
style='mso-spacerun:yes'>  </span>The number of the variable to be set can
itself be an expression (but if so, remember, it must always be enclosed in
parentheses). The expression can be an expression as in the C language; logical
expressions are evaluated to either 0 (FALSE) or 1 (TRUE).<span
style='mso-spacerun:yes'>  </span>The expression can be replaced by either +<span
class=GramE>+ ,</span> -- , += , -=, *=, /= (with meaning as in C; note that
only post-decrements and post-increments are allowed).<span
style='mso-spacerun:yes'>  </span>Thus <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>             </span><span class=GramE>if</span> (
length [ 0 ] &gt; ' <span class=SpellE>maxlen</span>' ) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                      </span><span class=GramE>set</span>
1 '1' + 1 ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>             </span><span class=GramE>else</span><span
style='mso-spacerun:yes'>   </span>set 0 '0' + 1 ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>             </span><span class=GramE>end</span> <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>will</span></span><span
lang=EN-GB style='color:black'> increase in one the variable number 1 if the
length of tree 0 is greater than the value stored in the variable named by the
user as <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>maxlen</i></b></span>, and otherwise
increase in one the variable 0.<span style='mso-spacerun:yes'>  </span>The same
is achieved with the more compact expression <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>              </span><span class=GramE>set<span
style='mso-spacerun:yes'>  </span>(</span> length [ 0 ] &gt; '<span
class=SpellE>maxlen</span>'<span style='mso-spacerun:yes'>  </span>) ++ ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Expressions<span class=GramE>.-</span> </span></i><span
lang=EN-GB style='color:black'>Expressions can be any combination of
operations.<span style='mso-spacerun:yes'>  </span>Valid operators are + - *
and /, as well as bit-operators <span class=GramE>( &amp;</span> | ^ ).<span
style='mso-spacerun:yes'>  </span>Valid logical comparisons are ==, <span
class=GramE>&gt; ,</span> &lt; , &gt;= , &lt;= , ! , <span class=GramE>and !</span>=.<span
style='mso-spacerun:yes'>  </span>Since precedence is evaluated always from
left to right, be careful to delimit <span class=SpellE>subexpressions</span>
as desired: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
class=GramE><span lang=EN-GB style='color:black'>if</span></span><span
lang=EN-GB style='color:black'> (<span style='mso-spacerun:yes'>  </span>'<span
class=SpellE>maxlen</span>' &lt;= 1000 + 500 ) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>is</span></span><span
lang=EN-GB style='color:black'> actually equivalent to <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
class=GramE><span lang=EN-GB style='color:black'>if</span></span><span
lang=EN-GB style='color:black'> (<span style='mso-spacerun:yes'>  </span>( '<span
class=SpellE>maxlen</span>' &lt;= 1000 ) + 500 ) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>so that it will
first evaluate if <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>maxlen</i></b></span> is less than 1000, and
then sum the result to 500 (if <span class=SpellE>maxlen</span> is less than
500, result is 501, otherwise result is 500; the expression <i
style='mso-bidi-font-style:normal'>always </i>evaluates &quot;true&quot; ...
probably not what you wanted).<span style='mso-spacerun:yes'>  </span>Either
remember the precedence and invert the order of expressions: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>               </span><span class=GramE>if</span> (
1000 + 500 &gt;= '<span class=SpellE>maxlen</span>' ) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>or</span></span><span
lang=EN-GB style='color:black'> use the original order and parentheses : <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>               </span><span class=GramE>if</span> ( '<span
class=SpellE>maxlen</span>' &lt;= ( 1000 + 500 ) ) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>Note that
parentheses must always be balanced.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Changing values of variables<span class=GramE>.-</span></span></i><span
lang=EN-GB style='color:black'> The values of variables are changed with the <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>set</i></b>
command:<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='color:black'><span style='mso-spacerun:yes'>        </span><span
class=GramE>set</span> N (expression) ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>The
&quot;expression&quot; may in this context not be enclosed in parentheses (this
is the only exception to the rule given above).<span style='mso-spacerun:yes'> 
</span>The expression in this context always must end with a semicolon.<span
style='mso-spacerun:yes'>  </span>The example above will set variable number N
to the value of the expression.<span style='mso-spacerun:yes'>  </span>You can
set the <span class=SpellE>i-<span class=GramE>th</span></span> variable (where
<span class=SpellE>i</span> itself is any expression) from N, as if N was an
array, by using: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='margin-left:70.8pt;text-indent:35.4pt'><span
class=GramE><span lang=EN-GB style='color:black'>set</span></span><span
lang=EN-GB style='color:black'> N[<span class=SpellE>i</span>] ( expression) ; <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>If some private variables
have been defined in previous files (see &quot;Private variables&quot; below),
the number N is set automatically to the number within that file (use names to
access variables from previous files).<o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'>To set variables as strings, use: <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.4pt;text-indent:35.4pt'><span
lang=EN-GB style='color:black'><span style='mso-tab-count:1'>         </span><span
class=GramE>set</span> N $text ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>text</span></span><span
lang=EN-GB style='color:black'> can be any number of characters, with the
proviso that the string starts at variable N, and continues to subsequent
variables; every 4 letters of the string occupy one user variable (which is a
long <span class=SpellE>int</span>), so that the actual number of user
variables needed to store a string is the length of the string divided by
4.<span style='mso-spacerun:yes'>  </span>The semicolon indicates the end of
the string (which can contain blanks or spaces; a period followed by a comma is
replaced by a semicolon, as in the quote command).<span
style='mso-spacerun:yes'>  </span>If &quot;text&quot; contains expressions to
be replaced (i.e. single quotes or symbols for arguments), it is replaced on
reading.<span style='mso-spacerun:yes'>  </span>It is possible to define the
string as &quot;literal&quot; by including an equal (=) sign before the number
of variable: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>set</span> =N $text ;
<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>A literal string has
expressions expanded when it is itself expanded (so that it can be expanded to
different strings).<span style='mso-spacerun:yes'>  </span>No string expansion
is allowed within strings (although it may work in some cases, its results are
not predictable). <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>A string can be copied from one
variable onto another easily, with the set command: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>set</span> 10 $$0 ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>copies</span></span><span
lang=EN-GB style='color:black'> string 0 onto string 10 (make sure string 0
doesn't extend to string 10 before doing this).<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Private variables.- </span></i><span lang=EN-GB
style='color:black'>When input files are nested, all the variables named in
preceding files are &quot;private&quot; that is, an internal numbering
starting from the last unnamed variable is used.<span
style='mso-spacerun:yes'>  </span>Accessing variables by their number is then
relative to a file.<span style='mso-spacerun:yes'>  </span>If a name is given
for a variable, the variable names are checked from latest to earliest, so that
if variable names are duplicated in nested files, the most internal files will
refer to their own variable (for example, simple counters like &quot;<span
class=SpellE>i</span>&quot; or &quot;a&quot;); names defined in a preceding
file will be recognized only if not defined later.<span
style='mso-spacerun:yes'>  </span>The number of private variables is determined
by the largest unnamed variable, so if you want to refer to some variables by
their number (for simple counters), it is wise to reserve the lowest numbers
for those, and start naming from variable 10 or more (this allows to keep
&quot;memory management&quot; easy and clean). You can also keep more variables
than the named ones as &quot;private,&quot; simply by issuing a <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>private
n;</i></b> command (where n is the number of private variables) at some point
before calling the next input file<span class=GramE>..</span><span
style='mso-spacerun:yes'>  </span>At the start of each file, you can also
include a <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>safe <span class=SpellE>vars</span> n;</i></b> statement (which checks
whether <b style='mso-bidi-font-weight:normal'>n</b> user variables are
actually available to the user from that file, and calls an error message
otherwise).<o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'>In this way, each input file can have its own internal
numbering of the variables; this allows to define &quot;functions&quot; in <span
class=GramE>files, that</span> are safely called from other files.<span
style='mso-spacerun:yes'>  </span>The <i style='mso-bidi-font-style:normal'>only</i>
way in which a file can access a variable named in a previously opened file is
by referring to it by its name (and only if the same name did not exist in the
file itself: in that case, the variable corresponding to the file itself is
accessed). When an input file is closed, all the variables that had been named
in that file are <span class=SpellE>denamed</span>; if you want to internally
rename variables within a file, you have to issue first a <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>var</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>-;</i></b>
command, which <span class=SpellE>denames</span> all non-private variables (<span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>var</i></b></span><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>-N;</i></b> <span class=SpellE>denames</span>
all variables above N, N included).<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Changing values for arrays<span class=GramE>.-</span> </span></i><span
lang=EN-GB style='color:black'>The <span class=SpellE>setarray</span> command
sets arrays.<span style='mso-spacerun:yes'>  </span>This can be used to read in
matrices (of any dimension): <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>  </span><span class=SpellE><span
class=GramE>setarray</span></span> 5,4 matrix <o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>       </span>0<span
style='mso-spacerun:yes'>    </span>1<span style='mso-spacerun:yes'>    
</span>2<span style='mso-spacerun:yes'>     </span>3 <o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>       </span>4<span
style='mso-spacerun:yes'>    </span>5<span style='mso-spacerun:yes'>    
</span>6<span style='mso-spacerun:yes'>     </span>7 <o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>       </span>8<span
style='mso-spacerun:yes'>    </span>9<span style='mso-spacerun:yes'>  
</span>10<span style='mso-spacerun:yes'>   </span>11 <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:78.9pt;text-indent:-21.0pt;mso-list:
l1 level1 lfo4;tab-stops:list 78.9pt'><![if !supportLists]><span lang=EN-GB
style='color:black'><span style='mso-list:Ignore'>12<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span></span><![endif]><span lang=EN-GB style='color:black'>13<span
style='mso-spacerun:yes'>  </span>14<span style='mso-spacerun:yes'>  </span>15 <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:57.9pt;tab-stops:list 91.8pt'><span
class=GramE><span lang=EN-GB style='color:black'>16<span
style='mso-spacerun:yes'>  </span>17</span></span><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>  </span>18<span
style='mso-spacerun:yes'>  </span>19 <o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>    </span>;<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>this</span></span><span
lang=EN-GB style='color:black'> will set the values for a variable called
matrix.<span style='mso-spacerun:yes'>  </span>The numbers can be any valid
expression; note that 0/1 matrices must have a blank space between the numbers.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Naming user variables<span class=GramE>.-</span> </span></i><span
lang=EN-GB style='color:black'>User variables can be named, and accessed
through their name: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=SpellE><span class=GramE>var</span></span>
= <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:81.75pt;text-indent:-18.0pt;
mso-list:l3 level1 lfo5;tab-stops:list 81.75pt'><![if !supportLists]><span
lang=EN-GB style='color:black'><span style='mso-list:Ignore'>0<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
class=SpellE><span lang=EN-GB style='color:black'>tree_number</span></span><span
lang=EN-GB style='color:black'><o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:81.75pt;text-indent:-18.0pt;
mso-list:l3 level1 lfo5;tab-stops:list 81.75pt'><![if !supportLists]><span
lang=EN-GB style='color:black'><span style='mso-list:Ignore'>1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-GB style='color:black'>result <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:81.75pt;text-indent:-18.0pt;
mso-list:l3 level1 lfo5;tab-stops:list 81.75pt'><![if !supportLists]><span
lang=EN-GB style='color:black'><span style='mso-list:Ignore'>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><![endif]><span
lang=EN-GB style='color:black'>other ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>If private variables
have been declared in previous files, the numbers (which can themselves be expressions)
correspond to the internal numbering for current file. If any number is
replaced by a + this is interpreted as &quot;the lowest unnamed variable&quot;
(if there are private variables, the first time + is used within a file, it
refers to the lowest possible number that can be accessed within that file). If
you are going to store values starting from variable number N, you can define
the number of variables to store by using a comma and the number of cells,
after the number: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span class=SpellE><span
class=GramE><span style='color:black;mso-ansi-language:EN-US'>var</span></span></span><span
style='color:black;mso-ansi-language:EN-US'> = <o:p></o:p></span></p>

<p class=MsoBodyText2><span style='color:black;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                      </span>N, (ntax+1)<span
style='mso-spacerun:yes'>                   </span><span class=SpellE>Taxon_list</span>
<o:p></o:p></span></p>

<p class=MsoBodyText2><span style='color:black;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                       </span></span><span lang=EN-GB
style='color:black'>+, (ntrees+1)<span
style='mso-spacerun:yes'>                 </span><span class=SpellE>Tree_list</span>
<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                       </span>+, (nchar+1)<span
style='mso-spacerun:yes'>                   </span><span class=SpellE>Char_list</span>
<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                       </span></span><span
style='color:black;mso-ansi-language:EN-US'>+<span class=GramE>,(</span>ntax+1),(nchar+1)<span
style='mso-spacerun:yes'>     </span>Matrix <o:p></o:p></span></p>

<p class=MsoBodyText2><span style='color:black;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'>                  </span>; <o:p></o:p></span></p>

<p class=MsoBodyText2><span style='color:black;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>After defining the
name for variable 10 as &quot;<span class=SpellE>Taxon_list</span>&quot;, it
will consider that the next variable to be named is variable number 10+ntax+1,
so that the variables do not overlap.<span style='mso-spacerun:yes'>  </span>If
there are 12 taxa and 15 trees, then the name &quot;<span class=SpellE>Tree_list</span>&quot;
is assigned to variable number 22, and the name &quot;<span class=SpellE>Char_list</span>&quot;
is assigned to variable 37.<span style='mso-spacerun:yes'>  </span>Since it is
always possible to refer to variables only by their names, the user does not
need to worry to which particular variable a name has been assigned.<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>An alternative (equivalent) format for
declaration of multidimensional arrays is: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span class=SpellE><span
class=GramE><span lang=ES style='color:black;mso-ansi-language:ES'>var</span></span></span><span
lang=ES style='color:black;mso-ansi-language:ES'> = <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=ES style='color:black;mso-ansi-language:ES'><span
style='mso-spacerun:yes'>                      </span>N<span
style='mso-spacerun:yes'>                    </span><span class=SpellE>Taxon_list</span>
<span class=GramE>[ (</span> <span class=SpellE>ntax</span> + 1 ) ] <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=ES style='color:black;mso-ansi-language:ES'><span
style='mso-spacerun:yes'>                       </span></span><span lang=EN-GB
style='color:black'>+<span style='mso-spacerun:yes'>                    </span><span
class=SpellE>Tree_<span class=GramE>list</span></span><span class=GramE><span
style='mso-spacerun:yes'>  </span>[</span> ( <span class=SpellE>ntrees</span> +
1 ) ] <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                       </span>+<span
style='mso-spacerun:yes'>                 </span><span
style='mso-spacerun:yes'>   </span><span class=SpellE>Char_<span class=GramE>list</span></span><span
class=GramE><span style='mso-spacerun:yes'>  </span>[</span> ( <span
class=SpellE>nchar</span> + 1 ) ] <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                       </span>+<span
style='mso-spacerun:yes'>                    </span><span class=GramE>Matrix<span
style='mso-spacerun:yes'>  </span>[</span> (<span class=SpellE>ntax</span> +1 )
, (<span class=SpellE>nchar</span> +1 ) ] <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                </span>; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>When using the square-bracket notation
for declaration, the commas are optional.<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'>Declaring the variables as multidimensional automatically
sets up the arrays in a proper way; changing the value for the arrays can
&quot;disassemble&quot; the matrix and make further accesses difficult or
impossible.<span style='mso-spacerun:yes'>  </span>To prevent this, it is
possible to have the macros check whether all the accesses to arrays are legal
(and then permitted only if the variable has been declared as such).<span
style='mso-spacerun:yes'>   </span>Without protection, the user is free to
access and change any values (e.g. to set up his own arrays).<span
style='mso-spacerun:yes'>  </span>The protection level is set to N with <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>macro
<span class=SpellE>prot</span> N</i></b>. <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Floating point printing</span></i><span class=GramE><span
lang=EN-GB style='color:black'>.-</span></span><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>  </span>By default, all the
numbers in user variables are stored as floating-point.<span
style='mso-spacerun:yes'>  </span>When printing the values, you can use
different numbers of significant digits.<span style='mso-spacerun:yes'> 
</span>Note that many operations under scripting involve (internally) expanding
the numbers and then parsing the strings, so that changing the number of
significant digits will change the precision with which many routines are
executed.<o:p></o:p></span></p>

<p class=MsoBodyText2 style='text-indent:35.4pt'><span lang=EN-GB
style='color:black'>The command <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>macfloat</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> N;</i></b>
sets the number of digits to be <i style='mso-bidi-font-style:normal'>N</i> (if
0, the printed numbers look like integers).<span style='mso-spacerun:yes'> 
</span>The option <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>macfloat</i></b></span><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'> e;</i></b> uses exponential
notation (not readable by commands, useful only to print out tables).<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>Storing the values as floating point
uses 64 bits per value; if you want to use only 32 bits (integer calculations,
to save memory), issue a <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>macfloat</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>-;</i></b>
command before turning the macros on. <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Internal variables<span class=GramE>.-</span></span></i><span
lang=EN-GB style='color:black'><span style='mso-spacerun:yes'>  </span>The user
can access a number of internal variables (i.e. number of taxa, characters,
etc.).<span style='mso-spacerun:yes'>  </span>You can get a list of those
entering <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>help+<span class=GramE>;<span style='font-weight:normal;font-style:
normal'>at</span></span></i></b> the command prompt.<span
style='mso-spacerun:yes'>  </span>Internal variables can be accessed only in
certain contexts in the macro language.<span style='mso-spacerun:yes'> 
</span>The general rule is that user variables can be accessed from any command
(by enclosing their number or name in single quotes), while internal variables
can be accessed only by the macro commands (<b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>loop</i></b>, <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>if</i></b>,
<b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>set</i></b>,
<span class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>var</i></b></span>, etc.). <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='font-size:9.0pt;mso-bidi-font-size:
12.0pt;color:black'>Note<span class=GramE>.-</span> The internal variables are
a key component of the TNT macro language; if accessing other internal
variables, besides the ones already included, could be useful to some users,
get in touch with PAG and ask him about the possibility of including those
variables in TNT (given the design of the macro language, it is really easy to
add new internal variables). <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Flow control<span class=GramE>.-</span> </span></i><span
lang=EN-GB style='color:black'>The flow control is established with the <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>if</i></b>
and <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>loop</i></b>
commands.<span style='mso-spacerun:yes'>  </span>There are two possible
syntaxes for <span class=GramE>the <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>if</i></b></span> command; one is: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>if</span> ( condition
) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>                </span><span class=GramE>action(s)</span>
<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>end</span> <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>where</span></span><span
lang=EN-GB style='color:black'> &quot;condition&quot; is any valid expression,
and &quot;action(s)&quot; is any set of valid TNT commands.<span
style='mso-spacerun:yes'>  </span>If the condition is &quot;satisfied&quot;
(i.e. evaluates to non-zero), then action(s) are executed; otherwise, all
actions before the <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>end</i></b> are skipped (note that TNT interprets its scripts as it
reads them, so that the action(s) may themselves contain syntax errors, which
won't be discovered if the action(s) are skipped; the errors will only be
discovered when the actions are executed).<span style='mso-spacerun:yes'> 
</span>The alternative is <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>if</span> ( condition
) <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:2'>                   </span><span class=GramE>action(s)</span>
A ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>else</span> <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:2'>                   </span><span class=GramE>action(s)</span>
B ; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>end</span> <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>which</span></span><span
lang=EN-GB style='color:black'> will execute action(s) A if the condition is
satisfied, action(s) B otherwise.<span style='mso-spacerun:yes'>  </span>Each <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>if</i></b>
must always be matched by <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>else</i></b> or <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>end</i></b>; each <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>else</i></b>
must always be matched by <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>end</i></b>. Nested <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>if</i></b> commands are legal,
without restrictions as to the number of <span class=SpellE>nestings</span>.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>The other command for flow control is
loop.<span style='mso-spacerun:yes'>  </span>The syntax is, <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>loop</span> <span
class=SpellE>i+j</span><span style='mso-spacerun:yes'>  </span>k<span
style='mso-spacerun:yes'>  </span>action(s)<span style='mso-spacerun:yes'> 
</span>stop<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=GramE><span lang=EN-GB style='color:black'>the</span></span><span
lang=EN-GB style='color:black'> numbers <span class=SpellE>i</span>, j, and k
can be numbers, variables, or expressions. This will repeatedly execute
action(s), k  <span class=SpellE>i</span> + j / j times.<span
style='mso-spacerun:yes'>  </span>If the symbol '#' followed by the number of
loop (see below) is included in action(s), it is replaced by the value for the
iteration being done.<span style='mso-spacerun:yes'>  </span>Thus, the symbol
will the first time be replaced by <span class=SpellE>i</span>, incrementing in
subsequent iterations by j, until value exceeds value k (if <span class=SpellE>i</span>
is greater than k, the loop is decreasing, and j is taken to be negative, even
if preceded by +). <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>Nested loops are possible (the maximum
nesting is determined with <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>macro*</i></b>).<span
style='mso-spacerun:yes'>  </span>To refer to the value for each loop, use the
'#' followed by the corresponding number.<span style='mso-spacerun:yes'> 
</span>Each <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>loop</i></b> must always be matched by a <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>stop</i></b>.<span
style='mso-spacerun:yes'>  </span>Within the loop, the commands <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>endloop</i></b></span>, <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>setloop</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> n</i></b>,
and <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>continue</i></b>,
are recognized (<span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>endloop</i></b></span> ends the loop, <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>setloop</i></b></span> resets the value of the loop <span class=SpellE>to
<b style='mso-bidi-font-weight:normal'>n</b></span>, and <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>continue</i></b> skips all the
action(s) between the current point and the <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>stop</i></b> that ends the loop).<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span>Essentially any action can be done from
within the loops, except <span class=SpellE>denaming</span> user variables. <span
style='mso-spacerun:yes'> </span>The loops use RAM from the macros, so if some
long loop cannot be executed under certain conditions, switch the macro option
to off and increase the RAM for macros. <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Return values</span></i><span class=GramE><span lang=EN-GB
style='color:black'>.-</span></span><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>  </span>When a file with instructions is closed, it
may be desirable for it to have some kind of return value (having it to store
the exit value in a user variable may be cumbersome and make the file less
flexible).<span style='mso-spacerun:yes'>  </span>The command <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>return
N;</i></b> closes the input file and sets the internal variable <span
class=SpellE><b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>exstatus</i></b></span><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'> </i></b>to the value N.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Recursive calls</span></i><span class=GramE><span
lang=EN-GB style='color:black'>.-</span></span><span lang=EN-GB
style='color:black'><span style='mso-spacerun:yes'>  </span>Input files with
instructions can be called recursively.<span style='mso-spacerun:yes'> 
</span>To call a file from itself, use the <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>recurse</i></b></span>
command (followed, if desired, by arguments, just like used for the <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>run</i></b>
command).<span style='mso-spacerun:yes'>  </span>This (together with the
declaration of private variables) allows to define quite complex routines.<span
style='mso-spacerun:yes'>  </span>The number of times a file can call itself
with <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>recurse</i></b></span> depends on the
maximum number of input files (default = 10); the number of input files allowed
is changed with <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>mxproc</i></b></span> (the file &quot;<span
class=SpellE>exactsol.run</span>&quot; does this change automatically). An
example is below, in the files &quot;<span class=SpellE>exactsol.run</span>&quot;
and &quot;<span class=SpellE>addtax.run</span>.&quot;<span
style='mso-spacerun:yes'>   </span>That finds an exact solution for any number
of taxa (it uses a complete down-pass optimization for each partial tree, so it
is rather inefficient).<span style='mso-spacerun:yes'>  </span>File &quot;<span
class=SpellE>exactsol.run</span>&quot; must contain: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>silent</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> =all ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>set</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> 0 <span
class=SpellE>ntax</span> + 2 ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>mxproc</span></span></span><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'> '0' ;<span style='mso-spacerun:yes'>        </span><span
style='mso-tab-count:1'>     </span>/*<span style='mso-spacerun:yes'> 
</span>make sure you have enough input calls */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>var</span></span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> = 0<span style='mso-spacerun:yes'>  </span><span class=SpellE>attax</span><span
style='mso-spacerun:yes'>   </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>1<span
style='mso-spacerun:yes'>  </span>bound</span><span style='mso-spacerun:yes'>  
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>2<span
style='mso-spacerun:yes'>  </span><span class=SpellE>wkdone</span></span> ;<span
style='mso-tab-count:1'>    </span>/*<span style='mso-spacerun:yes'>  </span><span
class=SpellE>attax</span> , bound , and <span class=SpellE>wkdone</span> are
private */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>set</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> bound
10000000;<span style='mso-spacerun:yes'>  </span>/* use a big initial bound */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>keep</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> 0 ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>tread</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> ( 0 ( 1 2
) ) ; <span style='mso-tab-count:1'>  </span>/* set an initial network */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>set</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> <span
class=SpellE>attax</span> 3 ;<span style='mso-spacerun:yes'>          </span><span
style='mso-tab-count:1'>   </span>/*<span style='mso-spacerun:yes'>  </span><span
class=SpellE>attax</span> = next taxon to add */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>report-</span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>addtax</span></span></span><span
class=GramE><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'> ;</span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-tab-count:2'>                   </span>/*<span
style='mso-spacerun:yes'>  </span>this is the &quot;recursive&quot; function */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>progress</span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>/ ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>report</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'>= ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>tc</span></span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> 1. ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>silent</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> - all ; <o:p></o:p></span></p>

<p class=MsoBodyTextIndent2><span class=SpellE><span class=GramE><span
lang=EN-GB style='color:black;mso-ansi-language:EN-GB'>proc</span></span></span><span
lang=EN-GB style='color:black;mso-ansi-language:EN-GB'>/ ; <o:p></o:p></span></p>

<p class=MsoBodyTextIndent2><span lang=EN-GB style='color:black;mso-ansi-language:
EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>File &quot;<span
class=SpellE>addtax.run</span>&quot; must contain: <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>set</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> 0 '<span
class=SpellE>attax</span>' ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>set</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> 1 <span
class=SpellE>ntax</span> + 1 ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>private</span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'> 2 ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=GramE><span
lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>loop</span></span><span lang=EN-GB style='font-size:
8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:EN-GB'> 1 <span
class=SpellE>nnodes</span> [ 0 ] <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=GramE>if</span> (
#1 == '1' || !<span class=SpellE>isintree</span> [ 0 #1 ] ) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>          </span><span class=GramE>continue
;</span> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>          </span><span class=GramE>end</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=GramE>if</span> (
'<span class=SpellE>attax</span>' == 4 ) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>set</span>
<span class=SpellE>wkdone</span> ++ ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>progress</span>
(('<span class=SpellE>wkdone</span>'*100)/15) 100 Working ;<span
style='mso-spacerun:yes'>  </span>/* progress */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>end</span>
<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=GramE>edit ]</span><span
style='mso-spacerun:yes'>  </span>0<span style='mso-spacerun:yes'> 
</span>'1'<span style='mso-spacerun:yes'>  </span>'<span class=SpellE>attax</span>'<span
style='mso-spacerun:yes'>  </span>#1 ; <span style='mso-tab-count:2'>                     </span><span
style='mso-spacerun:yes'>            </span>/* attach new taxon */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=GramE>set</span> 2
length [ 0 ] ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=GramE>if</span> (
'2' &lt;= 'bound' ) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>if</span>
( '<span class=SpellE>attax</span>' &lt; <span class=SpellE>ntax</span> ) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>             </span><span class=GramE>set</span>
<span class=SpellE>attax</span> ++ ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>             </span><span class=SpellE><span
class=GramE>recurse</span></span><span class=GramE> ;</span> <span
style='mso-tab-count:4'>                                                   </span>/*
call yourself !! */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>             </span><span class=GramE>set</span>
<span class=SpellE>attax</span> -- ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>else</span><span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>              </span><span class=GramE>if</span>
( '2' &lt; 'bound' ) <span style='mso-tab-count:3'>                                    </span>/*
update bound */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>                  </span><span
class=GramE>keep</span> 1 ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>                  </span><span
class=GramE>set</span> bound '2' ; <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>                  </span><span
class=GramE>end</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>              </span><span class=GramE>if</span>
( '2' == 'bound' &amp;&amp; ( ( <span class=SpellE>ntrees</span> + 1 ) &lt; <span
class=SpellE>maxtrees</span> ) ) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>                     </span><span
class=SpellE><span class=GramE>copytree</span></span> 0 ; <span
style='mso-tab-count:2'>                      </span><span
style='mso-spacerun:yes'>        </span>/* save multiple trees */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>                     </span><span
class=GramE>end</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>              </span><span class=GramE>end</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>         </span><span class=GramE>end</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=SpellE><span
class=GramE>pruntax</span></span> 0 / '<span class=SpellE>attax</span>' ;<span
style='mso-spacerun:yes'>                               </span>/* <span
class=SpellE>deattach</span> taxon */<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'><span style='mso-spacerun:yes'>    </span><span class=GramE>stop</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:106.2pt'><span class=SpellE><span
class=GramE><span lang=EN-GB style='font-size:8.0pt;mso-bidi-font-size:12.0pt;
color:black;mso-ansi-language:EN-GB'>proc</span></span></span><span lang=EN-GB
style='font-size:8.0pt;mso-bidi-font-size:12.0pt;color:black;mso-ansi-language:
EN-GB'>/; <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>Note that the C
style comments in the two example files are perfectly valid.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span class=SpellE><i style='mso-bidi-font-style:normal'><span
lang=EN-GB style='color:black'>Goto</span></i></span><span class=GramE><i
style='mso-bidi-font-style:normal'><span lang=EN-GB style='color:black'>.-</span></i></span><span
lang=EN-GB style='color:black'> The instruction <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>goto</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>
filename tag [arguments] </i></b>parses file <i style='mso-bidi-font-style:
normal'>filename</i> starting from the point <span class=SpellE>labeled</span> <i
style='mso-bidi-font-style:normal'>tag</i> (with <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>label tag</i></b>).<span
style='mso-spacerun:yes'>  </span>The file can be the same file, or a different
one.<span style='mso-spacerun:yes'>   </span>This can be used to have related
routines in the same file (a sort of &quot;library&quot;).<span
style='mso-spacerun:yes'>  </span>A file can be defined as the default file to
parse, with <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>goto</i></b></span><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'> = filename</i></b>.<span
style='mso-spacerun:yes'>  </span>Subsequent calls to <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>goto</i></b></span><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'> </i></b>must
specify only the <i style='mso-bidi-font-style:normal'>tag</i> (and arguments,
if any).<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i style='mso-bidi-font-style:normal'><span lang=EN-GB
style='color:black'>Branch-swapping.-</span></i><span lang=EN-GB
style='color:black'> In a way similar to the <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>loop</i></b> command, the
commands <b style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:
normal'>sprit</i></b> and <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>tbrit</i></b></span> initiate a
loop, with the difference that in each iteration, the tree given as argument N
is changed (under <span class=SpellE>spr</span> or <span class=SpellE>tbr</span>
branch-swapping): <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><span class=GramE>sprit</span> N<span
style='mso-spacerun:yes'>    </span>action(s)<span style='mso-spacerun:yes'>   
</span>stop<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>Action(s) can be any
valid TNT command, plus additional commands recognized only from within <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>sprit
</i></b>or <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>tbrit</i></b></span>: <o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-tab-count:1'>         </span><o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>     </span><span class=GramE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>continue</i></b></span><span
style='mso-spacerun:yes'>       </span>skip remaining actions and do next
rearrangement<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>     </span><span class=SpellE><span class=GramE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>endswap</i></b></span></span><span
style='mso-tab-count:1'>         </span><span style='mso-spacerun:yes'>     
</span>end the swapping (if never saved, tree N is unmodified)<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><span
style='mso-spacerun:yes'>     </span><span class=SpellE><span class=GramE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>resetswap</i></b></span></span><b
style='mso-bidi-font-weight:normal'><span style='mso-spacerun:yes'>     </span></b>save
current rearrangement and restart swapping<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'>While within a <b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>sprit</i></b>
or <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>tbrit</i></b></span> loop, the internal
variable <span class=SpellE><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>percswap</i></b></span> equals the
percentage of rearrangements done to complete swapping on current tree.<span
style='mso-spacerun:yes'>  </span>Together with the <b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>progress</i></b> command, this can
be used to report partial progress of the macro instructions.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'><span lang=EN-GB style='color:black'>Sprit</span></i></b><span
lang=EN-GB style='color:black'> or <span class=SpellE><b style='mso-bidi-font-weight:
normal'><i style='mso-bidi-font-style:normal'>tbrit</i></b></span> can be
nested with loops, but no <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>sprit</i></b> or <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>tbrit</i></b></span>
can be nested within a <b style='mso-bidi-font-weight:normal'><i
style='mso-bidi-font-style:normal'>sprit </i></b>or <span class=SpellE><b
style='mso-bidi-font-weight:normal'><i style='mso-bidi-font-style:normal'>tbrit</i></b></span>.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><i><span lang=EN-GB style='color:black'>Defining dialogs
(Windows only)</span></i><span class=GramE><span lang=EN-GB style='color:black'>.-</span></span><span
lang=EN-GB style='color:black'> It is possible to define templates for dialog
boxes, with the command <span class=SpellE><b><i>opendlg</i></b></span>.<span
style='mso-spacerun:yes'>  </span>Names for files can be written onto variables
by using the <span class=SpellE><b><i>getfname</i></b></span> command. See
online help for syntax; the file &quot;<span class=SpellE>dialog.run</span>&quot;
(included in the self-extracting file zipdruns.exe) contains an example, which
emulates the dialog box for <span class=SpellE><u>Analyze</u></span><u>/<span
class=SpellE>TraditionalSearch</span></u>.<span style='mso-spacerun:yes'> 
</span>A more elaborate script, &quot;<span class=SpellE>bremer.run</span>&quot;,
allows calculating <span class=SpellE>bremer</span> supports using various
options.<o:p></o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<p class=MsoBodyText2><span lang=EN-GB style='color:black'><o:p>&nbsp;</o:p></span></p>

<h1><a name="_Citations"></a><span class=GramE><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black'>Citations </span><span
lang=EN-GB style='mso-fareast-font-family:"Times New Roman";mso-bidi-font-family:
Arial;color:black;mso-bidi-font-weight:normal'><span
style='mso-spacerun:yes'> </span></span><span lang=EN-GB style='mso-fareast-font-family:
"Times New Roman";color:black'>(</span></span><span lang=EN-GB
style='mso-fareast-font-family:"Times New Roman";color:black'><a href="#_Index"><span
style='color:black'>back to index</span></a>)</span><span lang=EN-GB
style='font-size:14.0pt;mso-bidi-font-size:12.0pt;font-family:"Arial","sans-serif";
mso-fareast-font-family:"Times New Roman";color:black'><o:p></o:p></span></h1>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'>This section provides citations for
the sources of some methods used in TNT.<span style='mso-spacerun:yes'> 
</span>If you use the method in a published paper, you should (besides citing
TNT itself) cite the proper source for the method. <o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:
12.0pt;color:black;mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Bremer, K. 1990.<span style='mso-spacerun:yes'> 
</span>Combinable component consensus.<span style='mso-spacerun:yes'> 
</span>Cladistics 6:369-372 (as one might guess from the title, this paper
describes the combinable component consensus). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Bremer, K. 1994.<span style='mso-spacerun:yes'> 
</span>Branch support and tree stability.<span style='mso-spacerun:yes'> 
</span>Cladistics 10:295-304 (a formal description of the &quot;<span
class=SpellE>bremer</span> support&quot;). <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
class=SpellE><span lang=EN-GB style='color:black'>Coddington</span></span><span
lang=EN-GB style='color:black'>, J., and N. <span class=SpellE>Scharff</span>.
1994.<span style='mso-spacerun:yes'>  </span>Problems with zero-length
branches.<span style='mso-spacerun:yes'>  </span>Cladistics 10:415-423 (a
discussion of the problems associated with tree-collapsing, and proposal of
&quot;rule 4&quot;). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>De <span class=SpellE>Laet</span>, J. 1997.<span
style='mso-spacerun:yes'>  </span>A reconsideration of three-item analysis, the
use of implied weights in cladistics, and a practical application in <span
class=SpellE>Gentianaceae</span>.<span style='mso-spacerun:yes'>  </span>Ph.D.
Thesis, <span class=SpellE>Katholieke</span> <span class=SpellE>Universiteit</span>
Leuven, <span class=SpellE>Faculteit</span> der <span class=SpellE>Wetenschappen</span>,
Leuven, Belgium, 214 pp. (this contains discussion of implied weighting in
general, and it discusses the idea of recoding additive characters in binary form
for implied weighting).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Farris, J., V. Albert, M. <span class=SpellE>Källersjö</span>,
D. Lipscomb, and A. Kluge. 1996.<span style='mso-spacerun:yes'> 
</span>Parsimony <span class=SpellE>jackknifing</span> outperforms <span
class=SpellE>neighbor</span> joining.<span style='mso-spacerun:yes'> 
</span>Cladistics 12:99-124 (this paper describes the idea of resampling
characters with independent probability of removal, to eliminate influence of
uninformative or irrelevant characters, as well as the idea of superficial
searches for consensus estimations). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Farris, 1970.<span style='mso-spacerun:yes'> 
</span>Methods for computing Wagner trees.<span style='mso-spacerun:yes'> 
</span>Syst. Zool. 19:83-92 (the paper describing the first formal approach to
Wagner trees and optimization for additive and continuous characters).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Farris, J. 1990.<span style='mso-spacerun:yes'> 
</span>Phenetics in camouflage. Cladistics 6:91-100 (a discussion of problems
associated with some methods to discretize continuous characters in phylogenetic
analysis). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Felsenstein, J. 1985.<span style='mso-spacerun:yes'> 
</span>Confidence limits on phylogenies: an approach using the bootstrap.<span
style='mso-spacerun:yes'>  </span>Evolution 39:783-791 (the original paper
proposing to use the bootstrap on phylogenies). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Fitch, 1971.<span style='mso-spacerun:yes'> 
</span>Toward defining the course of evolution: minimal change for a specific
tree topology.<span style='mso-spacerun:yes'>  </span>Syst. Zool. 20:406-416
(this paper describes optimization for non-additive characters). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P. 1993.<span style='mso-spacerun:yes'> 
</span>Estimating character weights during tree search.<span
style='mso-spacerun:yes'>  </span>Cladistics 9:83-91 (description of the method
of &quot;implied weights&quot;). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P. 1994.<span style='mso-spacerun:yes'> 
</span>Character optimization and calculation of tree lengths.<span
style='mso-spacerun:yes'>  </span>Cladistics 9:433-436 (description of the
basic algorithm for faster calculation of tree lengths during searches; instead
of making T-2 node comparisons for each tree of T taxa, the algorithm requires
making only one node comparison per tree).<span style='mso-spacerun:yes'>  
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P. 1996.<span style='mso-spacerun:yes'> 
</span>Methods for faster parsimony analysis. Cladistics 12:199-220 (this paper
describes the &quot;two pass incremental optimization&quot; which is the basis
for calculations in TNT.<span style='mso-spacerun:yes'>  </span>It also
describes the &quot;<span class=SpellE>qcollapse</span>&quot; algorithm for
pre-collapsing of trees during searches).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P. 1998.<span style='mso-spacerun:yes'> 
</span>Tree searches under Sankoff parsimony.<span style='mso-spacerun:yes'> 
</span>Cladistics 14:229-237 (this paper describes calculation of tree lengths for
Sankoff characters; the method used in TNT is a combination of the exact method
described in this paper, with the incremental optimization described in
Goloboff, 1996). <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='color:black'>Goloboff, P. 1999. <span class=SpellE>Analyzing</span>
large data sets in reasonable times: solutions for composite optima. Cladistics
15:415-428 (description of tree-drifting, sectorial searches, tree-fusing, and
the idea of searching until the consensus stabilizes). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P. 2002. Optimization of polytomies: state
set and parallel operations. Molecular Phylogenetics and Evolution 22:269-275
(a description of the method used in TNT to optimize polytomies for
non-additive characters). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P. 2007.<span style='mso-spacerun:yes'> 
</span>Calculating SPR-distances between trees.<span style='mso-spacerun:yes'> 
</span>Cladistics (in press). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Goloboff, P., C. <span class=SpellE>Mattoni</span>,
and S. <span class=SpellE>Quinteros</span>. 2005. Continuous characters <span
class=SpellE>analyzed</span> as such.<span style='mso-spacerun:yes'> 
</span>Cladistics 22: 589-601. (<span class=GramE>a</span> description of the
method used to optimize continuous characters on polytomous trees, and a
description of the implementation of <span class=SpellE>continous</span>
characters in TNT; see also Farris, 1970). <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='color:black'>Goloboff, P., and D. Pol. 2002. Semi-strict
supertrees. Cladistics 18:514-525 (description of the supertree method used in
TNT, and some cautionary remarks about the use and interpretation of
supertrees). <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='color:black'>Goloboff, P., and J. Farris. 2001. Methods for
quick consensus estimation. Cladistics 17:S26-S34 (description of the methods
to estimate consensuses, the relative <span class=SpellE>bremer</span> support,
and tree collapsing using branch swapping). <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='color:black'>Goloboff, P., J. Farris, M. <span class=SpellE>Källersjö</span>,
B. <span class=SpellE>Oxelmann</span>, M. Ramirez, and C. Szumik. 2003.<span
style='mso-spacerun:yes'>  </span>Improvements to resampling measures of group
support. Cladistics 19:324-332 (description of symmetric resampling, frequency
differences, and frequency slopes). <o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='color:black'>Maddison, W. 1989.<span
style='mso-spacerun:yes'>  </span>Reconstructing character evolution on
polytomous <span class=SpellE>cladograms</span>.<span
style='mso-spacerun:yes'>  </span>Cladistics 5: 365-377. (<span class=GramE>the</span>
paper describing the method used to calculate length of &quot;soft&quot;
polytomies).<o:p></o:p></span></p>

<p class=MsoBodyText2 style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='color:black'>Nixon, K. 1999.<span style='mso-spacerun:yes'> 
</span>The parsimony ratchet, a new method for rapid parsimony analysis.
Cladistics 15:407-414 (the original description of the ratchet, already a
citation classic).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'>Hendy, M, and D. Penny.<span
style='mso-spacerun:yes'>  </span>Branch and bound algorithms to determine
minimal evolutionary trees. Mathematical Biosciences 59:277-290 (description of
the implicit enumeration algorithm, used for solutions guaranteed to find all
trees of best score). <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:35.45pt;text-indent:-35.45pt'><span
lang=EN-GB style='font-size:14.0pt;mso-bidi-font-size:12.0pt;color:black;
mso-ansi-language:EN-GB'><o:p>&nbsp;</o:p></span></p>

</div>

</body>

</html>
